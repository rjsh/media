<dec f='include/liveMedia/RTSPServer.hh' l='123' type='char * RTSPServer::rtspURL(const ServerMediaSession * serverMediaSession, int clientSocket = -1) const'/>
<doc f='include/liveMedia/RTSPServer.hh' l='112'>// &apos;Register&apos; the stream represented by &quot;serverMediaSession&quot; with the given remote client (specifed by name and port number).
  // This is done using our custom &quot;REGISTER&quot; RTSP command.
  // The function returns a unique number that can be used to identify the request; this number is also passed to &quot;responseHandler&quot;.
  // When a response is received from the remote client (or the &quot;REGISTER&quot; request fails), the specified response handler
  //   (if non-NULL) is called.  (Note that the &quot;resultString&quot; passed to the handler was dynamically allocated,
  //   and should be delete[]d by the handler after use.)
  // If &quot;receiveOurStreamViaTCP&quot; is True, then we&apos;re requesting that the remote client access our stream using RTP/RTCP-over-TCP.
  //   (Otherwise, the remote client may choose regular RTP/RTCP-over-UDP streaming.)
  // &quot;proxyURLSuffix&quot; (optional) is used only when the remote client is also a proxy server.
  //   It tells the proxy server the suffix that it should use in its &quot;rtsp://&quot; URL (when front-end clients access the stream)</doc>
