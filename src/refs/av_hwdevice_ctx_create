<dec f='ffmpeg/libavutil/hwcontext.h' l='270' type='int av_hwdevice_ctx_create(AVBufferRef ** device_ctx, enum AVHWDeviceType type, const char * device, AVDictionary * opts, int flags)'/>
<doc f='ffmpeg/libavutil/hwcontext.h' l='245'>/**
 * Open a device of the specified type and create an AVHWDeviceContext for it.
 *
 * This is a convenience function intended to cover the simple cases. Callers
 * who need to fine-tune device creation/management should open the device
 * manually and then wrap it in an AVHWDeviceContext using
 * av_hwdevice_ctx_alloc()/av_hwdevice_ctx_init().
 *
 * The returned context is already initialized and ready for use, the caller
 * should not call av_hwdevice_ctx_init() on it. The user_opaque/free fields of
 * the created AVHWDeviceContext are set by this function and should not be
 * touched by the caller.
 *
 * @param device_ctx On success, a reference to the newly-created device context
 *                   will be written here. The reference is owned by the caller
 *                   and must be released with av_buffer_unref() when no longer
 *                   needed. On failure, NULL will be written to this pointer.
 * @param type The type of the device to create.
 * @param device A type-specific string identifying the device to open.
 * @param opts A dictionary of additional (type-specific) options to use in
 *             opening the device. The dictionary remains owned by the caller.
 * @param flags currently unused
 *
 * @return 0 on success, a negative AVERROR code on failure.
 */</doc>
<use f='ffmpeg/ffmpeg_vaapi.c' l='530' u='c' c='vaapi_device_init'/>
<use f='ffmpeg/ffmpeg_vdpau.c' l='107' u='c' c='vdpau_alloc'/>
<def f='ffmpeg/libavutil/hwcontext.c' l='459' type='int av_hwdevice_ctx_create(AVBufferRef ** pdevice_ref, enum AVHWDeviceType type, const char * device, AVDictionary * opts, int flags)'/>
