<dec f='ffmpeg/libavformat/avio.h' l='695' type='int avio_closep(AVIOContext ** s)'/>
<doc f='ffmpeg/libavformat/avio.h' l='684'>/**
 * Close the resource accessed by the AVIOContext *s, free it
 * and set the pointer pointing to it to NULL.
 * This function can only be used if s was opened by avio_open().
 *
 * The internal buffer is automatically flushed before closing the
 * resource.
 *
 * @return 0 on success, an AVERROR &lt; 0 on error.
 * @see avio_close
 */</doc>
<use f='ffmpeg/libavdevice/lavfi.c' l='157' u='c' c='lavfi_read_header'/>
<use f='ffmpeg/libavfilter/f_metadata.c' l='274' u='c' c='uninit'/>
<use f='ffmpeg/ffmpeg.c' l='499' u='c' c='ffmpeg_cleanup'/>
<use f='ffmpeg/ffmpeg.c' l='1772' u='c' c='print_report'/>
<use f='ffmpeg/ffmpeg.c' l='2620' u='c' c='print_sdp'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1297' u='c' c='new_output_stream'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1460' u='c' c='read_file'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1466' u='c' c='read_file'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2318' u='c' c='open_output_file'/>
<use f='ffmpeg/ffserver.c' l='3865' u='c' c='build_feed_streams'/>
<use f='ffmpeg/ffserver.c' l='3873' u='c' c='build_feed_streams'/>
<use f='ffmpeg/libavformat/aviobuf.c' l='906' u='c' c='ffio_fdopen'/>
<use f='ffmpeg/libavformat/aviobuf.c' l='911' u='c' c='ffio_fdopen'/>
<def f='ffmpeg/libavformat/aviobuf.c' l='1092' type='int avio_closep(AVIOContext ** s)'/>
<use f='ffmpeg/libavformat/rtpenc_chain.c' l='92' u='c' c='ff_rtp_chain_mux_open'/>
<use f='ffmpeg/libavformat/rtsp.c' l='744' u='c' c='ff_rtsp_undo_setup'/>
<use f='ffmpeg/libavformat/sapenc.c' l='52' u='c' c='sap_write_close'/>
<use f='ffmpeg/libavformat/utils.c' l='624' u='c' c='avformat_open_input'/>
<dec f='include/libavformat/avio.h' l='371' type='int avio_closep(AVIOContext ** s)'/>
<doc f='include/libavformat/avio.h' l='360'>/**
 * Close the resource accessed by the AVIOContext *s, free it
 * and set the pointer pointing to it to NULL.
 * This function can only be used if s was opened by avio_open().
 *
 * The internal buffer is automatically flushed before closing the
 * resource.
 *
 * @return 0 on success, an AVERROR &lt; 0 on error.
 * @see avio_close
 */</doc>
