<dec f='vlc/include/vlc_threads.h' l='320' type='int vlc_timer_create(vlc_timer_t * , void (*)(void *) , void * )'/>
<use f='vlc/modules/access/dvdnav.c' l='368' u='c' c='Open'/>
<use f='vlc/modules/access/screen/xcb.c' l='246' u='c' c='Open'/>
<use f='vlc/modules/access/shm.c' l='243' u='c' c='Open'/>
<use f='vlc/modules/lua/extension.c' l='326' u='c' c='ScanLuaCallback'/>
<use f='vlc/modules/misc/inhibit/xdg.c' l='105' u='c' c='Open'/>
<use f='vlc/modules/stream_out/rtsp.c' l='111' u='c' c='RtspSetup'/>
<use f='vlc/modules/video_filter/rss.c' l='313' u='c' c='CreateFilter'/>
<def f='vlc/src/posix/timer.c' l='112' type='int vlc_timer_create(vlc_timer_t * id, void (*)(void *) func, void * data)'/>
<doc f='vlc/src/posix/timer.c' l='101'>/**
 * Initializes an asynchronous timer.
 * @warning Asynchronous timers are processed from an unspecified thread.
 * Multiple occurences of a single interval timer are serialized; they cannot
 * run concurrently.
 *
 * @param id pointer to timer to be initialized
 * @param func function that the timer will call
 * @param data parameter for the timer function
 * @return 0 on success, a system error code otherwise.
 */</doc>
