<dec f='ffmpeg/libavutil/pixdesc.h' l='273' type='enum AVPixelFormat av_get_pix_fmt(const char * name)'/>
<doc f='ffmpeg/libavutil/pixdesc.h' l='262'>/**
 * Return the pixel format corresponding to name.
 *
 * If there is no pixel format with name name, then looks for a
 * pixel format with the name corresponding to the native endian
 * format of name.
 * For example in a little-endian system, first looks for &quot;gray16&quot;,
 * then for &quot;gray16le&quot;.
 *
 * Finally if no pixel format has been found, returns AV_PIX_FMT_NONE.
 */</doc>
<use f='ffmpeg/libavdevice/v4l2.c' l='890' u='c' c='v4l2_read_header'/>
<use f='ffmpeg/libavfilter/formats.c' l='612' u='c' c='ff_parse_pixel_format'/>
<use f='ffmpeg/ffmpeg_opt.c' l='788' u='c' c='add_input_streams'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1563' u='c' c='new_video_stream'/>
<use f='ffmpeg/ffserver_config.c' l='1005' u='c' c='ffserver_parse_config_stream'/>
<use f='ffmpeg/libavfilter/vf_scale_vaapi.c' l='386' u='c' c='scale_vaapi_init'/>
<use f='ffmpeg/libavformat/img2dec.c' l='194' u='c' c='ff_img_read_header'/>
<use f='ffmpeg/libavformat/rawvideodec.c' l='52' u='c' c='rawvideo_read_header'/>
<use f='ffmpeg/libavutil/opt.c' l='422' u='r' c='set_string_pixel_fmt'/>
<def f='ffmpeg/libavutil/pixdesc.c' l='2194' type='enum AVPixelFormat av_get_pix_fmt(const char * name)'/>
<dec f='include/libavutil/pixdesc.h' l='156' type='enum AVPixelFormat av_get_pix_fmt(const char * name)'/>
<doc f='include/libavutil/pixdesc.h' l='145'>/**
 * Return the pixel format corresponding to name.
 *
 * If there is no pixel format with name name, then looks for a
 * pixel format with the name corresponding to the native endian
 * format of name.
 * For example in a little-endian system, first looks for &quot;gray16&quot;,
 * then for &quot;gray16le&quot;.
 *
 * Finally if no pixel format has been found, returns PIX_FMT_NONE.
 */</doc>
