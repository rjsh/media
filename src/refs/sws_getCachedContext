<dec f='ffmpeg/libswscale/swscale.h' l='294' type='struct SwsContext * sws_getCachedContext(struct SwsContext * context, int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter * srcFilter, SwsFilter * dstFilter, const double * param)'/>
<doc f='ffmpeg/libswscale/swscale.h' l='282'>/**
 * Check if context can be reused, otherwise reallocate a new one.
 *
 * If context is NULL, just calls sws_getContext() to get a new
 * context. Otherwise, checks if the parameters are the ones already
 * saved in context. If that is the case, returns the current
 * context. Otherwise, frees context and gets a new context with
 * the new parameters.
 *
 * Be warned that srcFilter and dstFilter are not checked, they
 * are assumed to remain the same.
 */</doc>
<use f='ffmpeg/libavfilter/vf_smartblur.c' l='147' u='c' c='alloc_sws_context'/>
<def f='ffmpeg/libswscale/utils.c' l='2334' type='struct SwsContext * sws_getCachedContext(struct SwsContext * context, int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter * srcFilter, SwsFilter * dstFilter, const double * param)'/>
<dec f='include/libswscale/swscale.h' l='301' type='struct SwsContext * sws_getCachedContext(struct SwsContext * context, int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter * srcFilter, SwsFilter * dstFilter, const double * param)'/>
<doc f='include/libswscale/swscale.h' l='289'>/**
 * Check if context can be reused, otherwise reallocate a new one.
 *
 * If context is NULL, just calls sws_getContext() to get a new
 * context. Otherwise, checks if the parameters are the ones already
 * saved in context. If that is the case, returns the current
 * context. Otherwise, frees context and gets a new context with
 * the new parameters.
 *
 * Be warned that srcFilter and dstFilter are not checked, they
 * are assumed to remain the same.
 */</doc>
