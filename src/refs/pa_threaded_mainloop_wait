<dec f='include/pulse/thread-mainloop.h' l='287' type='void pa_threaded_mainloop_wait(pa_threaded_mainloop * m)'/>
<use f='vlc/modules/access/pulse.c' l='147' u='c' c='stream_wait'/>
<use f='vlc/modules/access/pulse.c' l='361' u='c' c='Open'/>
<doc f='include/pulse/thread-mainloop.h' l='278'>/** Wait for an event to be signalled by the event loop thread. You
 * can use this to pass data from the event loop thread to the main
 * thread in a synchronized fashion. This function may not be called
 * inside the event loop thread. Prior to this call the event loop
 * object needs to be locked using pa_threaded_mainloop_lock(). While
 * waiting the lock will be released. Immediately before returning it
 * will be acquired again. This function may spuriously wake up even
 * without pa_threaded_mainloop_signal() being called. You need to
 * make sure to handle that! */</doc>
<use f='vlc/modules/audio_output/pulse.c' l='412' u='c' c='stream_wait'/>
<use f='vlc/modules/audio_output/pulse.c' l='1053' u='c' c='Open'/>
<use f='vlc/modules/audio_output/vlcpulse.c' l='66' u='c' c='context_wait'/>
