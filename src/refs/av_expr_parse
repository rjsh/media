<dec f='ffmpeg/libavutil/eval.h' l='74' type='int av_expr_parse(AVExpr ** expr, const char * s, const char *const * const_names, const char *const * func1_names, double (*const *)(void *, double) funcs1, const char *const * func2_names, double (*const *)(void *, double, double) funcs2, int log_offset, void * log_ctx)'/>
<use f='ffmpeg/libavfilter/aeval.c' l='133' u='c' c='parse_channel_expressions'/>
<use f='ffmpeg/libavfilter/aeval.c' l='133' u='c' c='parse_channel_expressions'/>
<doc f='ffmpeg/libavutil/eval.h' l='57'>/**
 * Parse an expression.
 *
 * @param expr a pointer where is put an AVExpr containing the parsed
 * value in case of successful parsing, or NULL otherwise.
 * The pointed to AVExpr must be freed with av_expr_free() by the user
 * when it is not needed anymore.
 * @param s expression as a zero terminated string, for example &quot;1+2^3+5*5+sin(2/3)&quot;
 * @param const_names NULL terminated array of zero terminated strings of constant identifiers, for example {&quot;PI&quot;, &quot;E&quot;, 0}
 * @param func1_names NULL terminated array of zero terminated strings of funcs1 identifiers
 * @param funcs1 NULL terminated array of function pointers for functions which take 1 argument
 * @param func2_names NULL terminated array of zero terminated strings of funcs2 identifiers
 * @param funcs2 NULL terminated array of function pointers for functions which take 2 arguments
 * @param log_ctx parent logging context
 * @return &gt;= 0 in case of success, a negative value corresponding to an
 * AVERROR code otherwise
 */</doc>
<use f='ffmpeg/libavfilter/af_afftfilt.c' l='133' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_afftfilt.c' l='151' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/af_firequalizer.c' l='450' u='c' c='generate_kernel'/>
<use f='ffmpeg/libavfilter/af_volume.c' l='99' u='c' c='set_expr'/>
<use f='ffmpeg/libavfilter/asrc_sine.c' l='161' u='c' c='init'/>
<use f='ffmpeg/libavfilter/avf_showcqt.c' l='239' u='c' c='init_volume'/>
<use f='ffmpeg/libavfilter/avf_showcqt.c' l='242' u='c' c='init_volume'/>
<use f='ffmpeg/libavfilter/avf_showcqt.c' l='302' u='c' c='init_cqt'/>
<use f='ffmpeg/libavfilter/avf_showcqt.c' l='477' u='c' c='init_axis_color'/>
<use f='ffmpeg/libavfilter/avf_showvolume.c' l='83' u='c' c='init'/>
<use f='ffmpeg/libavfilter/avfilter.c' l='465' u='c' c='set_enable_expr'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='97' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_metadata.c' l='236' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_select.c' l='173' u='c' c='init'/>
<use f='ffmpeg/libavfilter/setpts.c' l='100' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_blend.c' l='557' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_crop.c' l='197' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_crop.c' l='199' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_dctdnoiz.c' l='527' u='c' c='config_input'/>
<use f='ffmpeg/ffmpeg.c' l='3403' u='c' c='transcode_init'/>
<use f='ffmpeg/libavcodec/ratecontrol.c' l='136' u='c' c='ff_rate_control_init'/>
<use f='ffmpeg/libavfilter/vf_drawtext.c' l='755' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_drawtext.c' l='757' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_drawtext.c' l='759' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_eq.c' l='164' u='c' c='set_expr'/>
<use f='ffmpeg/libavfilter/vf_fftfilt.c' l='192' u='c' c='initialize'/>
<use f='ffmpeg/libavfilter/vf_geq.c' l='156' u='c' c='geq_init'/>
<use f='ffmpeg/libavfilter/vf_hue.c' l='163' u='c' c='set_expr'/>
<use f='ffmpeg/libavfilter/vf_lut.c' l='300' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_lut2.c' l='299' u='c' c='config_output'/>
<use f='ffmpeg/libavfilter/vf_overlay.c' l='173' u='c' c='set_expr'/>
<use f='ffmpeg/libavfilter/vf_qp.c' l='61' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_rotate.c' l='320' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_rotate.c' l='571' u='c' c='process_command'/>
<use f='ffmpeg/libavfilter/vf_vignette.c' l='105' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_vignette.c' l='105' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_vignette.c' l='105' u='c' c='init'/>
<def f='ffmpeg/libavutil/eval.c' l='658' type='int av_expr_parse(AVExpr ** expr, const char * s, const char *const * const_names, const char *const * func1_names, double (*const *)(void *, double) funcs1, const char *const * func2_names, double (*const *)(void *, double, double) funcs2, int log_offset, void * log_ctx)'/>
<use f='ffmpeg/libavutil/eval.c' l='730' u='c' c='av_expr_parse_and_eval'/>
