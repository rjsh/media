<dec f='vlc/include/vlc_input.h' l='499' type='void input_Stop(input_thread_t * , _Bool b_abort)'/>
<use f='vlc/lib/media_player.c' l='130' u='c' c='release_input_thread'/>
<use f='vlc/modules/misc/fingerprinter.c' l='146' u='c' c='cancelDoFingerprint'/>
<use f='vlc/modules/misc/fingerprinter.c' l='220' u='c' c='DoFingerprint'/>
<use f='vlc/modules/services_discovery/podcast.c' l='189' u='c' c='Close'/>
<use f='vlc/modules/services_discovery/podcast.c' l='240' u='c' c='Run'/>
<def f='vlc/src/input/input.c' l='235' type='void input_Stop(input_thread_t * p_input, _Bool b_abort)'/>
<doc f='vlc/src/input/input.c' l='225'>/**
 * Request a running input thread to stop and die
 *
 * b_abort must be true when a user stop is requested and not because you have
 * detected an error or an eof. It will be used to properly send the
 * INPUT_EVENT_ABORT event.
 *
 * \param p_input the input thread to stop
 * \param b_abort true if the input has been aborted by a user request
 */</doc>
<use f='vlc/src/input/vlm.c' l='665' u='c' c='vlm_OnMediaUpdate'/>
<use f='vlc/src/input/vlm.c' l='907' u='c' c='vlm_MediaInstanceDelete'/>
<use f='vlc/src/input/vlm.c' l='999' u='c' c='vlm_ControlMediaInstanceStart'/>
<use f='vlc/src/playlist/item.c' l='761' u='c' c='GoAndPreparse'/>
<use f='vlc/src/playlist/thread.c' l='438' u='c' c='LoopInput'/>
<use f='vlc/src/playlist/thread.c' l='464' u='c' c='LoopInput'/>
