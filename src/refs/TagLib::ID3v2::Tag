<inh f='include/taglib/tag.h' l='46' c='TagLib::Tag'/>
<def f='include/taglib/id3v2tag.h' l='135'/>
<size>24</size>
<doc f='include/taglib/id3v2tag.h' l='92'>/*!
     * This is the main class in the ID3v2 implementation.  It serves two
     * functions.  This first, as is obvious from the public API, is to provide a
     * container for the other ID3v2 related classes.  In addition, through the
     * read() and parse() protected methods, it provides the most basic level of
     * parsing.  In these methods the ID3v2 tag is extracted from the file and
     * split into data components.
     *
     * ID3v2 tags have several parts, TagLib attempts to provide an interface
     * for them all.  header(), footer() and extendedHeader() corespond to those
     * data structures in the ID3v2 standard and the APIs for the classes that
     * they return attempt to reflect this.
     *
     * Also ID3v2 tags are built up from a list of frames, which are in turn
     * have a header and a list of fields.  TagLib provides two ways of accessing
     * the list of frames that are in a given ID3v2 tag.  The first is simply
     * via the frameList() method.  This is just a list of pointers to the frames.
     * The second is a map from the frame type -- i.e. &quot;COMM&quot; for comments -- and
     * a list of frames of that type.  (In some cases ID3v2 allows for multiple
     * frames of the same type, hence this being a map to a list rather than just
     * a map to an individual frame.)
     *
     * More information on the structure of frames can be found in the ID3v2::Frame
     * class.
     *
     * read() and parse() pass binary data to the other ID3v2 class structures,
     * they do not handle parsing of flags or fields, for instace.  Those are
     * handled by similar functions within those classes.
     *
     * \note All pointers to data structures within the tag will become invalid
     * when the tag is destroyed.
     *
     * \warning Dealing with the nasty details of ID3v2 is not for the faint of
     * heart and should not be done without much meditation on the spec.  It&apos;s
     * rather long, but if you&apos;re planning on messing with this class and others
     * that deal with the details of ID3v2 (rather than the nice, safe, abstract
     * TagLib::Tag and friends), it&apos;s worth your time to familiarize yourself
     * with said spec (which is distrubuted with the TagLib sources).  TagLib
     * tries to do most of the work, but with a little luck, you can still
     * convince it to generate invalid ID3v2 tags.  The APIs for ID3v2 assume a
     * working knowledge of ID3v2 structure.  You&apos;re been warned.
     */</doc>
<fun r='_ZN6TagLib5ID3v23TagC1Ev'/>
<fun r='_ZN6TagLib5ID3v23TagC1EPNS_4FileElPKNS0_12FrameFactoryE'/>
<fun r='_ZN6TagLib5ID3v23TagD1Ev'/>
<fun r='_ZNK6TagLib5ID3v23Tag5titleEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag6artistEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag5albumEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag7commentEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag5genreEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag4yearEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag5trackEv'/>
<fun r='_ZN6TagLib5ID3v23Tag8setTitleERKNS_6StringE'/>
<fun r='_ZN6TagLib5ID3v23Tag9setArtistERKNS_6StringE'/>
<fun r='_ZN6TagLib5ID3v23Tag8setAlbumERKNS_6StringE'/>
<fun r='_ZN6TagLib5ID3v23Tag10setCommentERKNS_6StringE'/>
<fun r='_ZN6TagLib5ID3v23Tag8setGenreERKNS_6StringE'/>
<fun r='_ZN6TagLib5ID3v23Tag7setYearEj'/>
<fun r='_ZN6TagLib5ID3v23Tag8setTrackEj'/>
<fun r='_ZNK6TagLib5ID3v23Tag7isEmptyEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag6headerEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag14extendedHeaderEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag6footerEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag12frameListMapEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag9frameListEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag9frameListERKNS_10ByteVectorE'/>
<fun r='_ZN6TagLib5ID3v23Tag8addFrameEPNS0_5FrameE'/>
<fun r='_ZN6TagLib5ID3v23Tag11removeFrameEPNS0_5FrameEb'/>
<fun r='_ZN6TagLib5ID3v23Tag12removeFramesERKNS_10ByteVectorE'/>
<fun r='_ZNK6TagLib5ID3v23Tag10propertiesEv'/>
<fun r='_ZN6TagLib5ID3v23Tag27removeUnsupportedPropertiesERKNS_10StringListE'/>
<fun r='_ZN6TagLib5ID3v23Tag13setPropertiesERKNS_11PropertyMapE'/>
<fun r='_ZNK6TagLib5ID3v23Tag6renderEv'/>
<fun r='_ZNK6TagLib5ID3v23Tag6renderEi'/>
<fun r='_ZN6TagLib5ID3v23Tag19latin1StringHandlerEv'/>
<fun r='_ZN6TagLib5ID3v23Tag22setLatin1StringHandlerEPKNS0_19Latin1StringHandlerE'/>
<fun r='_ZN6TagLib5ID3v23Tag4readEv'/>
<fun r='_ZN6TagLib5ID3v23Tag5parseERKNS_10ByteVectorE'/>
<fun r='_ZN6TagLib5ID3v23Tag12setTextFrameERKNS_10ByteVectorERKNS_6StringE'/>
<fun r='_ZNK6TagLib5ID3v23Tag15downgradeFramesEPNS_4ListIPNS0_5FrameEEES6_'/>
<fun r='_ZN6TagLib5ID3v23TagC1ERKS1_'/>
<fun r='_ZN6TagLib5ID3v23TagaSERKS1_'/>
<mbr r='TagLib::ID3v2::Tag::d' o='128' t='TagLib::ID3v2::Tag::TagPrivate *'/>
