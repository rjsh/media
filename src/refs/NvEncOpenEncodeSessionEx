<dec f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2887' type='NVENCSTATUS NvEncOpenEncodeSessionEx(NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS * openSessionExParams, void ** encoder)'/>
<doc f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2862'>/**
 * \brief Opens an encoding session.
 *
 * Opens an encoding session and returns a pointer to the encoder interface in
 * the \p **encoder parameter. The client should start encoding process by calling
 * this API first.
 * The client must pass a pointer to IDirect3DDevice9/CUDA interface in the \p *device parameter.
 * If the creation of encoder session fails, the client must call ::NvEncDestroyEncoder API
 * before exiting.
 *
 * \param [in] openSessionExParams
 *    Pointer to a ::NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS structure.
 * \param [out] encoder
 *    Encode Session pointer to the NvEncodeAPI interface.
 * \return
 * ::NV_ENC_SUCCESS \n
 * ::NV_ENC_ERR_INVALID_PTR \n
 * ::NV_ENC_ERR_NO_ENCODE_DEVICE \n
 * ::NV_ENC_ERR_UNSUPPORTED_DEVICE \n
 * ::NV_ENC_ERR_INVALID_DEVICE \n
 * ::NV_ENC_ERR_DEVICE_NOT_EXIST \n
 * ::NV_ENC_ERR_UNSUPPORTED_PARAM \n
 * ::NV_ENC_ERR_GENERIC \n
 *
 */</doc>
