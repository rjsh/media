<dec f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2258' type='NVENCSTATUS NvEncCreateBitstreamBuffer(void * encoder, NV_ENC_CREATE_BITSTREAM_BUFFER * createBitstreamBufferParams)'/>
<doc f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2227'>/**
 * \brief Allocates an output bitstream buffer
 *
 * This function is used to allocate an output bitstream buffer and returns a
 * NV_ENC_OUTPUT_PTR to bitstream  buffer to the client in the
 * NV_ENC_CREATE_BITSTREAM_BUFFER::bitstreamBuffer field.
 * The client can only call this function after the encoder session has been
 * initialized using ::NvEncInitializeEncoder() API. The minimum number of output
 * buffers allocated by the client must be at least 4 more than the number of B
 * B frames being used for encoding. The client can only access the output
 * bitsteam data by locking the \p bitstreamBuffer using the ::NvEncLockBitstream()
 * function.
 *
 * \param [in] encoder
 *   Pointer to the NvEncodeAPI interface.
 * \param [in,out] createBitstreamBufferParams
 *   Pointer ::NV_ENC_CREATE_BITSTREAM_BUFFER for details.
 *
 * \return
 * ::NV_ENC_SUCCESS \n
 * ::NV_ENC_ERR_INVALID_PTR \n
 * ::NV_ENC_ERR_INVALID_ENCODERDEVICE \n
 * ::NV_ENC_ERR_DEVICE_NOT_EXIST \n
 * ::NV_ENC_ERR_UNSUPPORTED_PARAM \n
 * ::NV_ENC_ERR_OUT_OF_MEMORY \n
 * ::NV_ENC_ERR_INVALID_PARAM \n
 * ::NV_ENC_ERR_INVALID_VERSION \n
 * ::NV_ENC_ERR_ENCODER_NOT_INITIALIZED \n
 * ::NV_ENC_ERR_GENERIC \n
 *
 */</doc>
