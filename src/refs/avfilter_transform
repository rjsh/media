<dec f='ffmpeg/libavfilter/transform.h' l='121' type='int avfilter_transform(const uint8_t * src, uint8_t * dst, int src_stride, int dst_stride, int width, int height, const float * matrix, enum InterpolateMethod interpolate, enum FillMethod fill)'/>
<def f='ffmpeg/libavfilter/transform.c' l='139' type='int avfilter_transform(const uint8_t * src, uint8_t * dst, int src_stride, int dst_stride, int width, int height, const float * matrix, enum InterpolateMethod interpolate, enum FillMethod fill)'/>
<doc f='ffmpeg/libavfilter/transform.h' l='105'>/**
 * Do an affine transformation with the given interpolation method. This
 * multiplies each vector [x,y,1] by the matrix and then interpolates to
 * get the final value.
 *
 * @param src         source image
 * @param dst         destination image
 * @param src_stride  source image line size in bytes
 * @param dst_stride  destination image line size in bytes
 * @param width       image width in pixels
 * @param height      image height in pixels
 * @param matrix      9-item affine transformation matrix
 * @param interpolate pixel interpolation method
 * @param fill        edge fill method
 * @return negative on error
 */</doc>
<use f='ffmpeg/libavfilter/vf_deshake.c' l='334' u='c' c='deshake_transform_c'/>
