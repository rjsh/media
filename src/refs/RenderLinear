<dec f='vlc/modules/video_filter/deinterlace/algo_basic.h' l='82' type='void RenderLinear(filter_t * p_filter, picture_t * p_outpic, picture_t * p_pic, int i_field)'/>
<def f='vlc/modules/video_filter/deinterlace/algo_basic.c' l='127' type='void RenderLinear(filter_t * p_filter, picture_t * p_outpic, picture_t * p_pic, int i_field)'/>
<doc f='vlc/modules/video_filter/deinterlace/algo_basic.c' l='123'>/*****************************************************************************
 * RenderLinear: BOB with linear interpolation
 *****************************************************************************/</doc>
<doc f='vlc/modules/video_filter/deinterlace/algo_basic.h' l='70'>/**
 * RenderLinear: Bob with linear interpolation.
 *
 * There is no 1x (non-doubling) equivalent for this filter.
 *
 * @param p_filter The filter instance. Must be non-NULL.
 * @param p_outpic Output frame. Must be allocated by caller.
 * @param p_pic Input frame. Must exist.
 * @param i_field Render which field? 0 = top field, 1 = bottom field.
 * @see RenderBob()
 * @see Deinterlace()
 */</doc>
<use f='vlc/modules/video_filter/deinterlace/deinterlace.c' l='456' u='c' c='Deinterlace'/>
<use f='vlc/modules/video_filter/deinterlace/deinterlace.c' l='458' u='c' c='Deinterlace'/>
<use f='vlc/modules/video_filter/deinterlace/deinterlace.c' l='460' u='c' c='Deinterlace'/>
