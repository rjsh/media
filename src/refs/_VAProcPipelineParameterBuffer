<def f='include/va/va_vpp.h' l='399'/>
<size>96</size>
<doc f='include/va/va_vpp.h' l='369'>/**
 * \brief Video processing pipeline configuration.
 *
 * This buffer defines a video processing pipeline. As for any buffer
 * passed to \c vaRenderPicture(), this is a one-time usage model.
 * However, the actual filters to be applied are provided in the
 * \c filters field, so they can be re-used in other processing
 * pipelines.
 *
 * The target surface is specified by the \c render_target argument of
 * \c vaBeginPicture(). The general usage model is described as follows:
 * - \c vaBeginPicture(): specify the target surface that receives the
 *   processed output;
 * - \c vaRenderPicture(): specify a surface to be processed and composed
 *   into the \c render_target. Use as many \c vaRenderPicture() calls as
 *   necessary surfaces to compose ;
 * - \c vaEndPicture(): tell the driver to start processing the surfaces
 *   with the requested filters.
 *
 * If a filter (e.g. noise reduction) needs to be applied with different
 * values for multiple surfaces, the application needs to create as many
 * filter parameter buffers as necessary. i.e. the filter parameters shall
 * not change between two calls to \c vaRenderPicture().
 *
 * For composition usage models, the first surface to process will generally
 * use an opaque background color, i.e. \c output_background_color set with
 * the most significant byte set to \c 0xff. For instance, \c 0xff000000 for
 * a black background. Then, subsequent surfaces would use a transparent
 * background color.
 */</doc>
<mbr r='_VAProcPipelineParameterBuffer::surface' o='0' t='VASurfaceID'/>
<mbr r='_VAProcPipelineParameterBuffer::surface_region' o='64' t='const VARectangle *'/>
<mbr r='_VAProcPipelineParameterBuffer::surface_color_standard' o='128' t='VAProcColorStandardType'/>
<mbr r='_VAProcPipelineParameterBuffer::output_region' o='192' t='const VARectangle *'/>
<mbr r='_VAProcPipelineParameterBuffer::output_background_color' o='256' t='unsigned int'/>
<mbr r='_VAProcPipelineParameterBuffer::output_color_standard' o='288' t='VAProcColorStandardType'/>
<mbr r='_VAProcPipelineParameterBuffer::pipeline_flags' o='320' t='unsigned int'/>
<mbr r='_VAProcPipelineParameterBuffer::filter_flags' o='352' t='unsigned int'/>
<mbr r='_VAProcPipelineParameterBuffer::filters' o='384' t='VABufferID *'/>
<mbr r='_VAProcPipelineParameterBuffer::num_filters' o='448' t='unsigned int'/>
<mbr r='_VAProcPipelineParameterBuffer::forward_references' o='512' t='VASurfaceID *'/>
<mbr r='_VAProcPipelineParameterBuffer::num_forward_references' o='576' t='unsigned int'/>
<mbr r='_VAProcPipelineParameterBuffer::backward_references' o='640' t='VASurfaceID *'/>
<mbr r='_VAProcPipelineParameterBuffer::num_backward_references' o='704' t='unsigned int'/>
