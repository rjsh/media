<dec f='ffmpeg/libavformat/rm.h' l='92' type='int ff_rm_retrieve_cache(AVFormatContext * s, AVIOContext * pb, AVStream * st, RMStream * rst, AVPacket * pkt)'/>
<use f='ffmpeg/libavformat/rdt.c' l='322' u='c' c='rdt_parse_packet'/>
<doc f='ffmpeg/libavformat/rm.h' l='76'>/**
 * Retrieve one cached packet from the rm-context. The real container can
 * store several packets (as interpreted by the codec) in a single container
 * packet, which means the demuxer holds some back when the first container
 * packet is parsed and returned. The result is that rm-&gt;audio_pkt_cnt is
 * a positive number, the amount of cached packets. Using this function, each
 * of those packets can be retrieved sequentially.
 *
 * @param s context containing RMContext and AVIOContext for stream reading
 * @param pb context to read the data from
 * @param st stream that this packet belongs to
 * @param rst Real-specific stream information
 * @param pkt location to store the packet data
 * @return the number of samples left for subsequent calls to this same
 *          function, or 0 if all samples have been retrieved.
 */</doc>
<def f='ffmpeg/libavformat/rmdec.c' l='983' type='int ff_rm_retrieve_cache(AVFormatContext * s, AVIOContext * pb, AVStream * st, RMStream * ast, AVPacket * pkt)'/>
<use f='ffmpeg/libavformat/rmdec.c' l='1026' u='c' c='rm_read_packet'/>
<use f='ffmpeg/libavformat/rmdec.c' l='1336' u='c' c='ivr_read_packet'/>
