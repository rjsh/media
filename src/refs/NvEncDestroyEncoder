<dec f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2826' type='NVENCSTATUS NvEncDestroyEncoder(void * encoder)'/>
<doc f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='2799'>/**
 * \brief Destroy Encoding Session
 *
 * Destroys the encoder session previously created using ::NvEncOpenEncodeSession()
 * function. The client must flush the encoder before freeing any resources. In order
 * to flush the encoder the client must pass a NULL encode picture packet and either
 * wait for the ::NvEncEncodePicture() function to return in synchronous mode or wait
 * for the flush event to be signaled by the encoder in asynchronous mode.
 * The client must free all the input and output resources created using the
 * NvEncodeAPI interface before destroying the encoder. If the client is operating
 * in asynchronous mode, it must also unregister the completion events previously
 * registered.
 *
 * \param [in] encoder
 *   Pointer to the NvEncodeAPI interface.
 *
 * \return
 * ::NV_ENC_SUCCESS \n
 * ::NV_ENC_ERR_INVALID_PTR \n
 * ::NV_ENC_ERR_INVALID_ENCODERDEVICE \n
 * ::NV_ENC_ERR_DEVICE_NOT_EXIST \n
 * ::NV_ENC_ERR_UNSUPPORTED_PARAM \n
 * ::NV_ENC_ERR_OUT_OF_MEMORY \n
 * ::NV_ENC_ERR_INVALID_PARAM \n
 * ::NV_ENC_ERR_GENERIC \n
 *
 */</doc>
