<dec f='ffmpeg/libavcodec/avcodec.h' l='4240' type='int avcodec_copy_context(AVCodecContext * dest, const AVCodecContext * src)'/>
<use f='ffmpeg/ffmpeg.c' l='3050' u='c' c='init_output_stream'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1947' u='c' c='read_ffserver_streams'/>
<use f='ffmpeg/ffserver.c' l='2821' u='c' c='http_receive_data'/>
<use f='ffmpeg/ffserver.c' l='3532' u='c' c='add_av_stream1'/>
<def f='ffmpeg/libavcodec/options.c' l='190' type='int avcodec_copy_context(AVCodecContext * dest, const AVCodecContext * src)'/>
<dec f='include/libavcodec/avcodec.h' l='3310' type='int avcodec_copy_context(AVCodecContext * dest, const AVCodecContext * src)'/>
<doc f='include/libavcodec/avcodec.h' l='3299'>/**
 * Copy the settings of the source AVCodecContext into the destination
 * AVCodecContext. The resulting destination codec context will be
 * unopened, i.e. you are required to call avcodec_open2() before you
 * can use this AVCodecContext to decode/encode video/audio data.
 *
 * @param dest target codec context, should be initialized with
 *             avcodec_alloc_context3(), but otherwise uninitialized
 * @param src source codec context
 * @return AVERROR() on error (e.g. memory allocation error), 0 on success
 */</doc>
