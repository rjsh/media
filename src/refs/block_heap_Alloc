<dec f='vlc/include/vlc_block.h' l='169' type='block_t * block_heap_Alloc(void * , size_t )'/>
<use f='vlc/modules/access/directory.c' l='294' u='c' c='DirBlock'/>
<use f='vlc/modules/access/directory.c' l='444' u='c' c='DirBlock'/>
<use f='vlc/modules/access/screen/xcb.c' l='493' u='c' c='Demux'/>
<use f='vlc/modules/access/timecode.c' l='82' u='c' c='DemuxOnce'/>
<use f='vlc/modules/demux/avformat/demux.c' l='862' u='c' c='BuildSsaFrame'/>
<def f='vlc/src/misc/block.c' l='283' type='block_t * block_heap_Alloc(void * addr, size_t length)'/>
<doc f='vlc/src/misc/block.c' l='271'>/**
 * Creates a block from a heap allocation.
 * This is provided by LibVLC so that manually heap-allocated blocks can safely
 * be deallocated even after the origin plugin has been unloaded from memory.
 *
 * When block_Release() is called, VLC will free() the specified pointer.
 *
 * @param ptr base address of the heap allocation (will be free()&apos;d)
 * @param length bytes length of the heap allocation
 * @return NULL in case of error (ptr free()&apos;d in that case), or a valid
 * block_t pointer.
 */</doc>
