<dec f='ffmpeg/libavcodec/rle.h' l='47' type='int ff_rle_encode(uint8_t * outbuf, int out_size, const uint8_t * inbuf, int bpp, int w, int add_rep, int xor_rep, int add_raw, int xor_raw)'/>
<def f='ffmpeg/libavcodec/rle.c' l='49' type='int ff_rle_encode(uint8_t * outbuf, int out_size, const uint8_t * ptr, int bpp, int w, int add_rep, int xor_rep, int add_raw, int xor_raw)'/>
<doc f='ffmpeg/libavcodec/rle.h' l='37'>/**
 * RLE compress the row, with maximum size of out_size. Value before repeated bytes is (count ^ xor_rep) + add_rep.
 *                                                      Value before raw bytes is      (count ^ xor_raw) + add_raw.
 * @param outbuf Output buffer
 * @param out_size Maximum output size
 * @param inbuf Input buffer
 * @param bpp Bytes per pixel
 * @param w Image width
 * @return Size of output in bytes, or -1 if larger than out_size
 */</doc>
<use f='ffmpeg/libavcodec/targaenc.c' l='59' u='c' c='targa_encode_rle'/>
<use f='ffmpeg/libavcodec/tiffenc.c' l='192' u='c' c='encode_strip'/>
