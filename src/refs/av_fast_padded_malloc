<dec f='ffmpeg/libavcodec/avcodec.h' l='6090' type='void av_fast_padded_malloc(void * ptr, unsigned int * size, size_t min_size)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='6083'>/**
 * Same behaviour av_fast_malloc but the buffer has additional
 * AV_INPUT_BUFFER_PADDING_SIZE at the end which will always be 0.
 *
 * In addition the whole buffer will initially and after resizes
 * be 0-initialized so that no uninitialized data will ever appear.
 */</doc>
<use f='ffmpeg/libavcodec/4xm.c' l='463' u='c' c='decode_p_frame'/>
<use f='ffmpeg/libavcodec/4xm.c' l='802' u='c' c='decode_i_frame'/>
<use f='ffmpeg/libavcodec/apedec.c' l='1439' u='c' c='ape_decode_frame'/>
<use f='ffmpeg/libavcodec/asvdec.c' l='218' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/ccaption_dec.c' l='760' u='c' c='decode'/>
<use f='ffmpeg/libavcodec/cdxl.c' l='300' u='c' c='cdxl_decode_frame'/>
<use f='ffmpeg/libavcodec/cllc.c' l='390' u='c' c='cllc_decode_frame'/>
<use f='ffmpeg/libavcodec/dcadec.c' l='162' u='c' c='dcadec_decode_frame'/>
<use f='ffmpeg/libavcodec/eamad.c' l='309' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/eatqi.c' l='148' u='c' c='tqi_decode_frame'/>
<use f='ffmpeg/libavcodec/exr.c' l='1119' u='c' c='decode_block'/>
<use f='ffmpeg/libavcodec/exr.c' l='1125' u='c' c='decode_block'/>
<use f='ffmpeg/libavcodec/fraps.c' l='203' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/h2645_parse.c' l='94' u='c' c='ff_h2645_extract_rbsp'/>
<use f='ffmpeg/libavcodec/huffyuvdec.c' l='918' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/mdec.c' l='183' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/mimic.c' l='423' u='c' c='mimic_decode_frame'/>
<use f='ffmpeg/libavcodec/mjpegdec.c' l='1951' u='c' c='ff_mjpeg_find_marker'/>
<use f='ffmpeg/libavcodec/motionpixels.c' l='297' u='c' c='mp_decode_frame'/>
<use f='ffmpeg/libavcodec/mpc7.c' l='229' u='c' c='mpc7_decode_frame'/>
<use f='ffmpeg/libavcodec/mpeg4videodec.c' l='2694' u='c' c='ff_mpeg4_frame_end'/>
<use f='ffmpeg/libavcodec/mpegvideo_enc.c' l='2918' u='c' c='ff_mpv_reallocate_putbitbuffer'/>
<use f='ffmpeg/libavcodec/pgssubdec.c' l='301' u='c' c='parse_object_segment'/>
<use f='ffmpeg/libavcodec/pngdec.c' l='713' u='c' c='decode_idat_chunk'/>
<use f='ffmpeg/libavcodec/pngdec.c' l='718' u='c' c='decode_idat_chunk'/>
<use f='ffmpeg/libavcodec/rawdec.c' l='325' u='c' c='raw_decode'/>
<use f='ffmpeg/libavcodec/sanm.c' l='465' u='c' c='init_buffers'/>
<use f='ffmpeg/libavcodec/sanm.c' l='466' u='c' c='init_buffers'/>
<use f='ffmpeg/libavcodec/sanm.c' l='467' u='c' c='init_buffers'/>
<use f='ffmpeg/libavcodec/sanm.c' l='469' u='c' c='init_buffers'/>
<use f='ffmpeg/libavcodec/svq1dec.c' l='643' u='c' c='svq1_decode_frame'/>
<use f='ffmpeg/libavcodec/svq3.c' l='1427' u='c' c='svq3_decode_frame'/>
<use f='ffmpeg/libavcodec/tiff.c' l='281' u='c' c='deinvert_buffer'/>
<use f='ffmpeg/libavcodec/tiff.c' l='503' u='c' c='tiff_unpack_strip'/>
<use f='ffmpeg/libavcodec/tiffenc.c' l='366' u='c' c='encode_frame'/>
<use f='ffmpeg/libavcodec/truemotion2.c' l='892' u='c' c='decode_frame'/>
<def f='ffmpeg/libavcodec/utils.c' l='120' type='void av_fast_padded_malloc(void * ptr, unsigned int * size, size_t min_size)'/>
<use f='ffmpeg/libavcodec/utils.c' l='1737' u='c' c='ff_alloc_packet2'/>
<use f='ffmpeg/libavcodec/utvideoenc.c' l='564' u='c' c='utvideo_encode_frame'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='893' u='c' c='allocate_buffers2'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='898' u='c' c='allocate_buffers2'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='913' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='918' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='923' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='928' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='1872' u='c' c='wv_stereo'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='1873' u='c' c='wv_stereo'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='2536' u='c' c='wavpack_encode_block'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='2539' u='c' c='wavpack_encode_block'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='2873' u='c' c='wavpack_encode_frame'/>
<use f='ffmpeg/libavcodec/wavpackenc.c' l='2878' u='c' c='wavpack_encode_frame'/>
<use f='ffmpeg/libavformat/matroskadec.c' l='942' u='c' c='ebml_read_binary'/>
<dec f='include/libavcodec/avcodec.h' l='4540' type='void av_fast_padded_malloc(void * ptr, unsigned int * size, size_t min_size)'/>
<doc f='include/libavcodec/avcodec.h' l='4533'>/**
 * Allocate a buffer with padding, reusing the given one if large enough.
 *
 * Same behaviour av_fast_malloc but the buffer has additional
 * FF_INPUT_PADDING_SIZE at the end which will always memset to 0.
 *
 */</doc>
