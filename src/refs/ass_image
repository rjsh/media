<def f='include/ass/ass.h' l='37'/>
<size>48</size>
<doc f='include/ass/ass.h' l='28'>/*
 * A linked list of images produced by an ass renderer.
 *
 * These images have to be rendered in-order for the correct screen
 * composition.  The libass renderer clips these bitmaps to the frame size.
 * w/h can be zero, in this case the bitmap should not be rendered at all.
 * The last bitmap row is not guaranteed to be padded up to stride size,
 * e.g. in the worst case a bitmap has the size stride * (h - 1) + w.
 */</doc>
<mbr r='ass_image::w' o='0' t='int'/>
<mbr r='ass_image::h' o='32' t='int'/>
<mbr r='ass_image::stride' o='64' t='int'/>
<mbr r='ass_image::bitmap' o='128' t='unsigned char *'/>
<mbr r='ass_image::color' o='192' t='uint32_t'/>
<mbr r='ass_image::dst_x' o='224' t='int'/>
<mbr r='ass_image::dst_y' o='256' t='int'/>
<mbr r='ass_image::next' o='320' t='struct ass_image *'/>
