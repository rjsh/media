<def f='vlc/modules/stream_out/rtcp.c' l='58'/>
<size>584</size>
<doc f='vlc/modules/stream_out/rtcp.c' l='44'>/*
 * NOTE on RTCP implementation:
 * - there is a single sender (us), no conferencing here! =&gt; n = sender = 1,
 * - as such we need not bother to include Receiver Reports,
 * - in unicast case, there is a single receiver =&gt; members = 1 + 1 = 2,
 *   and obviously n &gt; 25% of members,
 * - in multicast case, we do not want to maintain the number of receivers
 *   and we assume it is big (i.e. than 3) because that&apos;s what broadcasting is
 *   all about,
 * - it is assumed we_sent = true (could be wrong), since we are THE sender,
 * - we always send SR + SDES, while running,
 * - FIXME: we do not implement separate rate limiting for SDES,
 * - we do not implement any profile-specific extensions for the time being.
 */</doc>
<mbr r='rtcp_sender_t::length' o='0' t='size_t'/>
<mbr r='rtcp_sender_t::payload' o='64' t='uint8_t [558]'/>
<mbr r='rtcp_sender_t::handle' o='4544' t='int'/>
<mbr r='rtcp_sender_t::packets' o='4576' t='uint32_t'/>
<mbr r='rtcp_sender_t::bytes' o='4608' t='uint32_t'/>
<mbr r='rtcp_sender_t::counter' o='4640' t='unsigned int'/>
