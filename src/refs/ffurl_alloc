<dec f='ffmpeg/libavformat/url.h' l='113' type='int ffurl_alloc(URLContext ** puc, const char * filename, int flags, const AVIOInterruptCB * int_cb)'/>
<doc f='ffmpeg/libavformat/url.h' l='100'>/**
 * Create a URLContext for accessing to the resource indicated by
 * url, but do not initiate the connection yet.
 *
 * @param puc pointer to the location where, in case of success, the
 * function puts the pointer to the created URLContext
 * @param flags flags which control how the resource indicated by url
 * is to be opened
 * @param int_cb interrupt callback to use for the URLContext, may be
 * NULL
 * @return &gt;= 0 in case of success, a negative value corresponding to an
 * AVERROR code in case of failure
 */</doc>
<def f='ffmpeg/libavformat/avio.c' l='292' type='int ffurl_alloc(URLContext ** puc, const char * filename, int flags, const AVIOInterruptCB * int_cb)'/>
<use f='ffmpeg/libavformat/avio.c' l='316' u='c' c='ffurl_open_whitelist'/>
<use f='ffmpeg/libavformat/avio.c' l='483' u='c' c='avio_check'/>
<use f='ffmpeg/libavformat/avio.c' l='502' u='c' c='avpriv_io_move'/>
<use f='ffmpeg/libavformat/avio.c' l='505' u='c' c='avpriv_io_move'/>
<use f='ffmpeg/libavformat/avio.c' l='524' u='c' c='avpriv_io_delete'/>
<use f='ffmpeg/libavformat/avio.c' l='550' u='c' c='avio_open_dir'/>
<use f='ffmpeg/libavformat/http.c' l='531' u='c' c='http_accept'/>
<use f='ffmpeg/libavformat/mmsh.c' l='233' u='c' c='mmsh_open_internal'/>
<use f='ffmpeg/libavformat/mmsh.c' l='270' u='c' c='mmsh_open_internal'/>
<use f='ffmpeg/libavformat/rtmphttp.c' l='211' u='c' c='rtmp_http_open'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1741' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1771' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/tcp.c' l='191' u='c' c='tcp_accept'/>
