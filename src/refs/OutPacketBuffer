<def f='include/liveMedia/MediaSink.hh' l='71'/>
<size>64</size>
<doc f='include/liveMedia/MediaSink.hh' l='70'>// A data structure that a sink may use for an output packet:</doc>
<fun r='_ZN15OutPacketBufferC1Ejj'/>
<fun r='_ZN15OutPacketBufferD1Ev'/>
<smbr r='_ZN15OutPacketBuffer7maxSizeE' t='unsigned int'/>
<fun r='_ZNK15OutPacketBuffer6curPtrEv'/>
<fun r='_ZNK15OutPacketBuffer19totalBytesAvailableEv'/>
<fun r='_ZNK15OutPacketBuffer15totalBufferSizeEv'/>
<fun r='_ZNK15OutPacketBuffer6packetEv'/>
<fun r='_ZNK15OutPacketBuffer13curPacketSizeEv'/>
<fun r='_ZN15OutPacketBuffer9incrementEj'/>
<fun r='_ZN15OutPacketBuffer7enqueueEPKhj'/>
<fun r='_ZN15OutPacketBuffer11enqueueWordEj'/>
<fun r='_ZN15OutPacketBuffer6insertEPKhjj'/>
<fun r='_ZN15OutPacketBuffer10insertWordEjj'/>
<fun r='_ZN15OutPacketBuffer7extractEPhjj'/>
<fun r='_ZN15OutPacketBuffer11extractWordEj'/>
<fun r='_ZN15OutPacketBuffer9skipBytesEj'/>
<fun r='_ZNK15OutPacketBuffer15isPreferredSizeEv'/>
<fun r='_ZNK15OutPacketBuffer13wouldOverflowEj'/>
<fun r='_ZNK15OutPacketBuffer16numOverflowBytesEj'/>
<fun r='_ZNK15OutPacketBuffer18isTooBigForAPacketEj'/>
<fun r='_ZN15OutPacketBuffer15setOverflowDataEjjRK7timevalj'/>
<fun r='_ZNK15OutPacketBuffer16overflowDataSizeEv'/>
<fun r='_ZNK15OutPacketBuffer24overflowPresentationTimeEv'/>
<fun r='_ZNK15OutPacketBuffer30overflowDurationInMicrosecondsEv'/>
<fun r='_ZNK15OutPacketBuffer16haveOverflowDataEv'/>
<fun r='_ZN15OutPacketBuffer15useOverflowDataEv'/>
<fun r='_ZN15OutPacketBuffer17adjustPacketStartEj'/>
<fun r='_ZN15OutPacketBuffer16resetPacketStartEv'/>
<fun r='_ZN15OutPacketBuffer11resetOffsetEv'/>
<fun r='_ZN15OutPacketBuffer17resetOverflowDataEv'/>
<mbr r='OutPacketBuffer::fPacketStart' o='0' t='unsigned int'/>
<mbr r='OutPacketBuffer::fCurOffset' o='32' t='unsigned int'/>
<mbr r='OutPacketBuffer::fPreferred' o='64' t='unsigned int'/>
<mbr r='OutPacketBuffer::fMax' o='96' t='unsigned int'/>
<mbr r='OutPacketBuffer::fLimit' o='128' t='unsigned int'/>
<mbr r='OutPacketBuffer::fBuf' o='192' t='unsigned char *'/>
<mbr r='OutPacketBuffer::fOverflowDataOffset' o='256' t='unsigned int'/>
<mbr r='OutPacketBuffer::fOverflowDataSize' o='288' t='unsigned int'/>
<mbr r='OutPacketBuffer::fOverflowPresentationTime' o='320' t='struct timeval'/>
<mbr r='OutPacketBuffer::fOverflowDurationInMicroseconds' o='448' t='unsigned int'/>
