<dec f='ffmpeg/libavcodec/avcodec.h' l='5452' type='int avpicture_fill(AVPicture * picture, const uint8_t * ptr, enum AVPixelFormat pix_fmt, int width, int height)'/>
<use f='ffmpeg/ffmpeg.c' l='1980' u='c' c='do_streamcopy'/>
<def f='ffmpeg/libavcodec/avpicture.c' l='37' type='int avpicture_fill(AVPicture * picture, const uint8_t * ptr, enum AVPixelFormat pix_fmt, int width, int height)'/>
<dec f='include/libavcodec/avcodec.h' l='4223' type='int avpicture_fill(AVPicture * picture, uint8_t * ptr, enum AVPixelFormat pix_fmt, int width, int height)'/>
<doc f='include/libavcodec/avcodec.h' l='4203'>/**
 * Fill in the AVPicture fields.
 * The fields of the given AVPicture are filled in by using the &apos;ptr&apos; address
 * which points to the image data buffer. Depending on the specified picture
 * format, one or multiple image data pointers and line sizes will be set.
 * If a planar format is specified, several pointers will be set pointing to
 * the different picture planes and the line sizes of the different planes
 * will be stored in the lines_sizes array.
 * Call with ptr == NULL to get the required size for the ptr buffer.
 *
 * To allocate the buffer and fill in the AVPicture fields in one call,
 * use avpicture_alloc().
 *
 * @param picture AVPicture whose fields are to be filled in
 * @param ptr Buffer which will contain or contains the actual image data
 * @param pix_fmt The format in which the picture data is stored.
 * @param width the width of the image in pixels
 * @param height the height of the image in pixels
 * @return size of the image data in bytes
 */</doc>
