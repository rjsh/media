<dec f='ffmpeg/libavcodec/acelp_filters.h' l='121' type='void ff_acelp_high_pass_filter(int16_t * out, int * hpf_f, const int16_t * in, int length)'/>
<def f='ffmpeg/libavcodec/acelp_filters.c' l='99' type='void ff_acelp_high_pass_filter(int16_t * out, int * hpf_f, const int16_t * in, int length)'/>
<doc f='ffmpeg/libavcodec/acelp_filters.h' l='98'>/**
 * high-pass filtering and upscaling (4.2.5 of G.729).
 * @param[out]     out   output buffer for filtered speech data
 * @param[in,out]  hpf_f past filtered data from previous (2 items long)
 *                       frames (-0x20000000 &lt;= (14.13) &lt; 0x20000000)
 * @param in speech data to process
 * @param length input data size
 *
 * out[i] = 0.93980581 * in[i] - 1.8795834 * in[i-1] + 0.93980581 * in[i-2] +
 *          1.9330735 * out[i-1] - 0.93589199 * out[i-2]
 *
 * The filter has a cut-off frequency of 1/80 of the sampling freq
 *
 * @note Two items before the top of the in buffer must contain two items from the
 *       tail of the previous subframe.
 *
 * @remark It is safe to pass the same array in in and out parameters.
 *
 * @remark AMR uses mostly the same filter (cut-off frequency 60Hz, same formula,
 *         but constants differs in 5th sign after comma). Fortunately in
 *         fixed-point all coefficients are the same as in G.729. Thus this
 *         routine can be used for the fixed-point AMR decoder, too.
 */</doc>
<use f='ffmpeg/libavcodec/g729dec.c' l='692' u='c' c='decode_frame'/>
