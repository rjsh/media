<dec f='ffmpeg/libavutil/avstring.h' l='68' type='char * av_stristr(const char * haystack, const char * needle)'/>
<doc f='ffmpeg/libavutil/avstring.h' l='56'>/**
 * Locate the first case-independent occurrence in the string haystack
 * of the string needle.  A zero-length string needle is considered to
 * match at the start of haystack.
 *
 * This function is a case-insensitive version of the standard strstr().
 *
 * @param haystack string to search in
 * @param needle   string to search for
 * @return         pointer to the located match within haystack
 *                 or a null pointer if no match
 */</doc>
<use f='ffmpeg/ffserver.c' l='2679' u='c' c='http_start_receive_data'/>
<use f='ffmpeg/libavcodec/samidec.c' l='60' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavcodec/samidec.c' l='75' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavcodec/samidec.c' l='75' u='c' c='sami_paragraph_to_ass'/>
<use f='ffmpeg/libavformat/ftp.c' l='507' u='c' c='ftp_has_feature'/>
<use f='ffmpeg/libavformat/ftp.c' l='559' u='c' c='ftp_connect_control_connection'/>
<use f='ffmpeg/libavformat/http.c' l='966' u='c' c='has_header'/>
<use f='ffmpeg/libavformat/mov.c' l='4471' u='c' c='mov_read_uuid'/>
<use f='ffmpeg/libavformat/webmdashenc.c' l='287' u='c' c='parse_filename'/>
<use f='ffmpeg/libavformat/webmdashenc.c' l='290' u='c' c='parse_filename'/>
<use f='ffmpeg/libavformat/webmdashenc.c' l='293' u='c' c='parse_filename'/>
<def f='ffmpeg/libavutil/avstring.c' l='56' type='char * av_stristr(const char * s1, const char * s2)'/>
