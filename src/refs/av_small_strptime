<dec f='ffmpeg/libavutil/parseutils.h' l='186' type='char * av_small_strptime(const char * p, const char * fmt, struct tm * dt)'/>
<doc f='ffmpeg/libavutil/parseutils.h' l='156'>/**
 * Simplified version of strptime
 *
 * Parse the input string p according to the format string fmt and
 * store its results in the structure dt.
 * This implementation supports only a subset of the formats supported
 * by the standard strptime().
 *
 * The supported input field descriptors are listed below.
 * - %H: the hour as a decimal number, using a 24-hour clock, in the
 *   range &apos;00&apos; through &apos;23&apos;
 * - %J: hours as a decimal number, in the range &apos;0&apos; through INT_MAX
 * - %M: the minute as a decimal number, using a 24-hour clock, in the
 *   range &apos;00&apos; through &apos;59&apos;
 * - %S: the second as a decimal number, using a 24-hour clock, in the
 *   range &apos;00&apos; through &apos;59&apos;
 * - %Y: the year as a decimal number, using the Gregorian calendar
 * - %m: the month as a decimal number, in the range &apos;1&apos; through &apos;12&apos;
 * - %d: the day of the month as a decimal number, in the range &apos;1&apos;
 *   through &apos;31&apos;
 * - %T: alias for &apos;%H:%M:%S&apos;
 * - %%: a literal &apos;%&apos;
 *
 * @return a pointer to the first character not processed in this function
 *         call. In case the input string contains more characters than
 *         required by the format string the return value points right after
 *         the last consumed input character. In case the whole input string
 *         is consumed the return value points to the null byte at the end of
 *         the string. On failure NULL is returned.
 */</doc>
<use f='ffmpeg/libavformat/ftp.c' l='930' u='c' c='ftp_parse_date'/>
<def f='ffmpeg/libavutil/parseutils.c' l='469' type='char * av_small_strptime(const char * p, const char * fmt, struct tm * dt)'/>
<use f='ffmpeg/libavutil/parseutils.c' l='524' u='c' c='av_small_strptime'/>
<use f='ffmpeg/libavutil/parseutils.c' l='595' u='c' c='av_parse_time'/>
<use f='ffmpeg/libavutil/parseutils.c' l='616' u='c' c='av_parse_time'/>
<use f='ffmpeg/libavutil/parseutils.c' l='627' u='c' c='av_parse_time'/>
<use f='ffmpeg/libavutil/parseutils.c' l='630' u='c' c='av_parse_time'/>
<use f='ffmpeg/libavutil/parseutils.c' l='674' u='c' c='av_parse_time'/>
