<dec f='ffmpeg/libavcodec/wma.h' l='153' type='int ff_wma_run_level_decode(AVCodecContext * avctx, GetBitContext * gb, VLC * vlc, const float * level_table, const uint16_t * run_table, int version, WMACoef * ptr, int offset, int num_coefs, int block_len, int frame_len_bits, int coef_nb_bits)'/>
<def f='ffmpeg/libavcodec/wma.c' l='438' type='int ff_wma_run_level_decode(AVCodecContext * avctx, GetBitContext * gb, VLC * vlc, const float * level_table, const uint16_t * run_table, int version, WMACoef * ptr, int offset, int num_coefs, int block_len, int frame_len_bits, int coef_nb_bits)'/>
<doc f='ffmpeg/libavcodec/wma.c' l='422'>/**
 * Decode run level compressed coefficients.
 * @param avctx codec context
 * @param gb bitstream reader context
 * @param vlc vlc table for get_vlc2
 * @param level_table level codes
 * @param run_table run codes
 * @param version 0 for wma1,2 1 for wmapro
 * @param ptr output buffer
 * @param offset offset in the output buffer
 * @param num_coefs number of input coefficients
 * @param block_len input buffer length (2^n)
 * @param frame_len_bits number of bits for escaped run codes
 * @param coef_nb_bits number of bits for escaped level codes
 * @return 0 on success, -1 otherwise
 */</doc>
<use f='ffmpeg/libavcodec/wmadec.c' l='602' u='c' c='wma_decode_block'/>
<use f='ffmpeg/libavcodec/wmaprodec.c' l='955' u='c' c='decode_coeffs'/>
