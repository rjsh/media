<def f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.h' l='1285' type='int tinyxml2::XMLElement::QueryAttribute(const char * name, int * value) const'/>
<doc f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.h' l='1268'>/** Given an attribute name, QueryAttribute() returns
    	XML_NO_ERROR, XML_WRONG_ATTRIBUTE_TYPE if the conversion
    	can&apos;t be performed, or XML_NO_ATTRIBUTE if the attribute
    	doesn&apos;t exist. It is overloaded for the primitive types,
		and is a generally more convenient replacement of
		QueryIntAttribute() and related functions.
		
		If successful, the result of the conversion
    	will be written to &apos;value&apos;. If not successful, nothing will
    	be written to &apos;value&apos;. This allows you to provide default
    	value:

    	@verbatim
    	int value = 10;
    	QueryAttribute( &quot;foo&quot;, &amp;value );		// if &quot;foo&quot; isn&apos;t found, value will still be 10
    	@endverbatim
    */</doc>
