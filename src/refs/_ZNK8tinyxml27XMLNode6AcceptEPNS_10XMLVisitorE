<dec f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.h' l='826' type='bool tinyxml2::XMLNode::Accept(tinyxml2::XMLVisitor * visitor) const'/>
<doc f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.h' l='804'>/** Accept a hierarchical visit of the nodes in the TinyXML-2 DOM. Every node in the
    	XML tree will be conditionally visited and the host will be called back
    	via the XMLVisitor interface.

    	This is essentially a SAX interface for TinyXML-2. (Note however it doesn&apos;t re-parse
    	the XML for the callbacks, so the performance of TinyXML-2 is unchanged by using this
    	interface versus any other.)

    	The interface has been based on ideas from:

    	- http://www.saxproject.org/
    	- http://c2.com/cgi/wiki?HierarchicalVisitorPattern

    	Which are both good references for &quot;visiting&quot;.

    	An example of using Accept():
    	@verbatim
    	XMLPrinter printer;
    	tinyxmlDoc.Accept( &amp;printer );
    	const char* xmlcstr = printer.CStr();
    	@endverbatim
    */</doc>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='566' c='_ZNK8tinyxml211XMLDocument6AcceptEPNS_10XMLVisitorE'/>
<use f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='570' u='c' c='_ZNK8tinyxml211XMLDocument6AcceptEPNS_10XMLVisitorE'/>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='924' c='_ZNK8tinyxml27XMLText6AcceptEPNS_10XMLVisitorE'/>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='971' c='_ZNK8tinyxml210XMLComment6AcceptEPNS_10XMLVisitorE'/>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='1020' c='_ZNK8tinyxml214XMLDeclaration6AcceptEPNS_10XMLVisitorE'/>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='1067' c='_ZNK8tinyxml210XMLUnknown6AcceptEPNS_10XMLVisitorE'/>
<ovr f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='1565' c='_ZNK8tinyxml210XMLElement6AcceptEPNS_10XMLVisitorE'/>
<use f='MediaInfoLib/ThirdParty/tinyxml2/tinyxml2.cpp' l='1569' u='c' c='_ZNK8tinyxml210XMLElement6AcceptEPNS_10XMLVisitorE'/>
