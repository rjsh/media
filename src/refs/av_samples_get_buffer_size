<dec f='ffmpeg/libavutil/samplefmt.h' l='160' type='int av_samples_get_buffer_size(int * linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align)'/>
<doc f='ffmpeg/libavutil/samplefmt.h' l='150'>/**
 * Get the required buffer size for the given audio parameters.
 *
 * @param[out] linesize calculated linesize, may be NULL
 * @param nb_channels   the number of channels
 * @param nb_samples    the number of samples in a single channel
 * @param sample_fmt    the sample format
 * @param align         buffer size alignment (0 = default, 1 = no alignment)
 * @return              required buffer size, or negative error code on failure
 */</doc>
<use f='ffmpeg/libavcodec/flacdec.c' l='140' u='c' c='allocate_buffers'/>
<use f='ffmpeg/libavcodec/takdec.c' l='749' u='c' c='tak_decode_frame'/>
<use f='ffmpeg/libavcodec/utils.c' l='476' u='c' c='avcodec_fill_audio_frame'/>
<use f='ffmpeg/libavcodec/utils.c' l='579' u='c' c='update_frame_pool'/>
<use f='ffmpeg/libavutil/audio_fifo.c' l='66' u='c' c='av_audio_fifo_alloc'/>
<use f='ffmpeg/libavutil/audio_fifo.c' l='100' u='c' c='av_audio_fifo_realloc'/>
<use f='ffmpeg/libavutil/frame.c' l='234' u='c' c='get_audio_buffer'/>
<def f='ffmpeg/libavutil/samplefmt.c' l='119' type='int av_samples_get_buffer_size(int * linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align)'/>
<use f='ffmpeg/libavutil/samplefmt.c' l='158' u='c' c='av_samples_fill_arrays'/>
<use f='ffmpeg/libavutil/samplefmt.c' l='177' u='c' c='av_samples_alloc'/>
<dec f='include/libavutil/samplefmt.h' l='141' type='int av_samples_get_buffer_size(int * linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align)'/>
<doc f='include/libavutil/samplefmt.h' l='131'>/**
 * Get the required buffer size for the given audio parameters.
 *
 * @param[out] linesize calculated linesize, may be NULL
 * @param nb_channels   the number of channels
 * @param nb_samples    the number of samples in a single channel
 * @param sample_fmt    the sample format
 * @param align         buffer size alignment (0 = default, 1 = no alignment)
 * @return              required buffer size, or negative error code on failure
 */</doc>
<use f='vlc/modules/codec/avcodec/audio.c' l='164' u='c' c='GetAudioBuf'/>
<use f='vlc/modules/codec/avcodec/encoder.c' l='970' u='c' c='OpenEncoder'/>
