<def f='MediaInfoLib/MediaInfo/Multiple/File_Mk.cpp' l='314' type='int32u [256]'/>
<use f='MediaInfoLib/MediaInfo/Multiple/File_Mk.cpp' l='4584' u='r' c='_ZN12MediaInfoLib7File_Mk13CRC32_ComputeERjPKhS3_'/>
<doc f='MediaInfoLib/MediaInfo/Multiple/File_Mk.cpp' l='306'>//---------------------------------------------------------------------------
// CRC_32_Table (Little Endian bitstream, )
// The CRC in use is the IEEE-CRC-32 algorithm as used in the ISO 3309 standard and in section 8.1.1.6.2 of ITU-T recommendation V.42, with initial value of 0xFFFFFFFF. The CRC value MUST be computed on a little endian bitstream and MUST use little endian storage.
// A CRC is computed like this:
// Init: int32u CRC32 ^= 0;
// for each data byte do
//     CRC32=(CRC32&gt;&gt;8) ^ Mk_CRC32_Table[(CRC32&amp;0xFF)^*Buffer_Current++];
// End: CRC32 ^= 0;</doc>
