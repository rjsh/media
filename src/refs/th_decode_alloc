<dec f='include/theora/theoradec.h' l='255' type='th_dec_ctx * th_decode_alloc(const th_info * _info, const th_setup_info * _setup)'/>
<use f='vlc/modules/codec/theora.c' l='377' u='c' c='ProcessHeaders'/>
<doc f='include/theora/theoradec.h' l='233'>/**Allocates a decoder instance.
 *
 * &lt;b&gt;Security Warning:&lt;/b&gt; The Theora format supports very large frame sizes,
 *  potentially even larger than the address space of a 32-bit machine, and
 *  creating a decoder context allocates the space for several frames of data.
 * If the allocation fails here, your program will crash, possibly at some
 *  future point because the OS kernel returned a valid memory range and will
 *  only fail when it tries to map the pages in it the first time they are
 *  used.
 * Even if it succeeds, you may experience a denial of service if the frame
 *  size is large enough to cause excessive paging.
 * If you are integrating libtheora in a larger application where such things
 *  are undesirable, it is highly recommended that you check the frame size in
 *  \a _info before calling this function and refuse to decode streams where it
 *  is larger than some reasonable maximum.
 * libtheora will not check this for you, because there may be machines that
 *  can handle such streams and applications that wish to.
 * \param _info  A #th_info struct filled via th_decode_headerin().
 * \param _setup A #th_setup_info handle returned via
 *                th_decode_headerin().
 * \return The initialized #th_dec_ctx handle.
 * \retval NULL If the decoding parameters were invalid.*/</doc>
