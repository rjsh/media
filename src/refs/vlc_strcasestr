<dec f='vlc/include/vlc_charset.h' l='43' type='char * vlc_strcasestr(const char * , const char * )'/>
<use f='vlc/src/playlist/search.c' l='138' u='c' c='playlist_LiveSearchUpdateInternal'/>
<use f='vlc/src/playlist/search.c' l='139' u='c' c='playlist_LiveSearchUpdateInternal'/>
<use f='vlc/src/playlist/search.c' l='140' u='c' c='playlist_LiveSearchUpdateInternal'/>
<use f='vlc/src/playlist/search.c' l='143' u='c' c='playlist_LiveSearchUpdateInternal'/>
<def f='vlc/src/text/unicode.c' l='207' type='char * vlc_strcasestr(const char * haystack, const char * needle)'/>
<doc f='vlc/src/text/unicode.c' l='196'>/**
 * Look for an UTF-8 string within another one in a case-insensitive fashion.
 * Beware that this is quite slow. Contrary to strcasestr(), this function
 * works regardless of the system character encoding, and handles multibyte
 * code points correctly.

 * @param haystack string to look into
 * @param needle string to look for
 * @return a pointer to the first occurence of the needle within the haystack,
 * or NULL if no occurence were found.
 */</doc>
