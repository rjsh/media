<dec f='vlc/src/config/vlc_getopt.h' l='99' type='int vlc_getopt_long(int argc, char *const * argv, const char * shortopts, const struct vlc_option * longopts, int * longind, vlc_getopt_t *restrict state)'/>
<use f='vlc/src/config/cmdline.c' l='208' u='c' c='config_LoadCmdLine'/>
<def f='vlc/src/config/getopt.c' l='146' type='int vlc_getopt_long(int argc, char *const * argv, const char * optstring, const struct vlc_option *restrict longopts, int * longind, vlc_getopt_t *restrict state)'/>
<doc f='vlc/src/config/getopt.c' l='96'>/* Scan elements of ARGV (whose length is ARGC) for option characters
   given in OPTSTRING.

   If an element of ARGV starts with &apos;-&apos;, and is not exactly &quot;-&quot; or &quot;--&quot;,
   then it is an option element.  The characters of this element
   (aside from the initial &apos;-&apos;) are option characters.  If `getopt&apos;
   is called repeatedly, it returns successively each of the option characters
   from each of the option elements.

   If `getopt&apos; finds another option character, it returns that character,
   updating `optind&apos; and `nextchar&apos; so that the next call to `getopt&apos; can
   resume the scan with the following option character or ARGV-element.

   If there are no more option characters, `getopt&apos; returns -1.
   Then `optind&apos; is the index in ARGV of the first ARGV-element
   that is not an option.  (The ARGV-elements have been permuted
   so that those that are not options now come last.)

   OPTSTRING is a string containing the legitimate option characters.
   If an option character is seen that is not listed in OPTSTRING,
   return &apos;?&apos;.

   If a char in OPTSTRING is followed by a colon, that means it wants an arg,
   so the following text in the same ARGV-element, or the text of the following
   ARGV-element, is returned in `optarg&apos;.

   If OPTSTRING starts with `-&apos; or `+&apos;, it requests different methods of
   handling the non-option ARGV-elements.
   See the comments about REQUIRE_ORDER, above.

   Long-named options begin with `--&apos; instead of `-&apos;.
   Their names may be abbreviated as long as the abbreviation is unique
   or is an exact match for some defined option.  If they have an
   argument, it follows the option name in the same ARGV-element, separated
   from the option name by a `=&apos;, or else the in next ARGV-element.
   When `getopt&apos; finds a long-named option, it returns 0 if that option&apos;s
   `flag&apos; field is nonzero, the value of the option&apos;s `val&apos; field
   if the `flag&apos; field is zero.

   The elements of ARGV aren&apos;t really const, because we permute them.
   But we pretend they&apos;re const in the prototype to be compatible
   with other systems.

   LONGOPTS is a vector of `struct option&apos; terminated by an
   element containing a name which is zero.

   LONGIND returns the index in LONGOPT of the long-named option found.
   It is only valid when a long-named option has been found by the most
   recent call.  */</doc>
