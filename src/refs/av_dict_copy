<dec f='ffmpeg/libavutil/dict.h' l='170' type='int av_dict_copy(AVDictionary ** dst, const AVDictionary * src, int flags)'/>
<doc f='ffmpeg/libavutil/dict.h' l='160'>/**
 * Copy entries from one AVDictionary struct into another.
 * @param dst pointer to a pointer to a AVDictionary struct. If *dst is NULL,
 *            this function will allocate a struct for you and put it in *dst
 * @param src pointer to source AVDictionary struct
 * @param flags flags to use when setting entries in *dst
 * @note metadata is read using the AV_DICT_IGNORE_SUFFIX flag
 * @return 0 on success, negative AVERROR code on failure. If dst was allocated
 *           by this function, callers should free the associated memory.
 */</doc>
<use f='ffmpeg/libavdevice/avdevice.c' l='218' u='c' c='list_devices_for_context'/>
<use f='ffmpeg/ffmpeg_opt.c' l='577' u='c' c='copy_metadata'/>
<use f='ffmpeg/ffmpeg_opt.c' l='582' u='c' c='copy_metadata'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1405' u='c' c='new_output_stream'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1407' u='c' c='new_output_stream'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1411' u='c' c='new_output_stream'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1899' u='c' c='copy_chapters'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2058' u='c' c='open_output_file'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2473' u='c' c='open_output_file'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2485' u='c' c='open_output_file'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2753' u='c' c='opt_target'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2754' u='c' c='opt_target'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2810' u='c' c='opt_default_new'/>
<use f='ffmpeg/ffmpeg_opt.c' l='2811' u='c' c='opt_default_new'/>
<use f='ffmpeg/ffprobe.c' l='2867' u='c' c='mark_section_show_entries'/>
<use f='ffmpeg/ffserver.c' l='2267' u='c' c='http_prepare_data'/>
<use f='ffmpeg/ffserver_config.c' l='197' u='c' c='add_codec'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='204' u='c' c='ff_frame_thread_encoder_init'/>
<use f='ffmpeg/libavcodec/mjpegdec.c' l='2468' u='c' c='ff_mjpeg_decode_frame'/>
<use f='ffmpeg/libavcodec/utils.c' l='1266' u='c' c='avcodec_open2'/>
<use f='ffmpeg/libavcodec/webp.c' l='1492' u='c' c='webp_decode_frame'/>
<use f='ffmpeg/libavformat/asfdec_o.c' l='1764' u='c' c='asf_read_header'/>
<use f='ffmpeg/libavformat/concatdec.c' l='190' u='c' c='copy_stream_props'/>
<use f='ffmpeg/libavformat/fifo.c' l='121' u='c' c='fifo_thread_write_header'/>
<use f='ffmpeg/libavformat/fifo.c' l='455' u='c' c='fifo_mux_init'/>
<use f='ffmpeg/libavformat/hls.c' l='606' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='607' u='c' c='open_url'/>
<use f='ffmpeg/libavformat/hls.c' l='965' u='c' c='handle_id3'/>
<use f='ffmpeg/libavformat/hls.c' l='1131' u='c' c='open_input'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='332' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='340' u='c' c='hls_mux_init'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='896' u='c' c='hls_write_header'/>
<use f='ffmpeg/libavformat/http.c' l='249' u='c' c='http_open_cnx'/>
<use f='ffmpeg/libavformat/http.c' l='497' u='c' c='http_open'/>
<use f='ffmpeg/libavformat/mux.c' l='246' u='c' c='init_muxer'/>
<use f='ffmpeg/libavformat/oggenc.c' l='539' u='c' c='ogg_write_header'/>
<use f='ffmpeg/libavformat/rtpdec_asf.c' l='145' u='c' c='ff_wms_parse_sdp_a_line'/>
<use f='ffmpeg/libavformat/segment.c' l='162' u='c' c='segment_mux_init'/>
<use f='ffmpeg/libavformat/segment.c' l='186' u='c' c='segment_mux_init'/>
<use f='ffmpeg/libavformat/segment.c' l='263' u='c' c='segment_start'/>
<use f='ffmpeg/libavformat/segment.c' l='760' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/tee.c' l='160' u='c' c='open_slave'/>
<use f='ffmpeg/libavformat/utils.c' l='521' u='c' c='avformat_open_input'/>
<use f='ffmpeg/libavformat/utils.c' l='1655' u='c' c='read_frame_internal'/>
<use f='ffmpeg/libavformat/utils.c' l='4029' u='c' c='ff_stream_encode_params_copy'/>
<use f='ffmpeg/libavformat/webm_chunk.c' l='73' u='c' c='chunk_mux_init'/>
<def f='ffmpeg/libavutil/dict.c' l='217' type='int av_dict_copy(AVDictionary ** dst, const AVDictionary * src, int flags)'/>
<use f='ffmpeg/libavutil/frame.c' l='324' u='c' c='frame_copy_props'/>
<use f='ffmpeg/libavutil/frame.c' l='360' u='c' c='frame_copy_props'/>
<use f='ffmpeg/libavutil/opt.c' l='692' u='c' c='av_opt_set_dict_val'/>
<use f='ffmpeg/libavutil/opt.c' l='984' u='c' c='av_opt_get_dict_val'/>
<use f='ffmpeg/libavutil/opt.c' l='1716' u='c' c='av_opt_copy'/>
<dec f='include/libavutil/dict.h' l='117' type='void av_dict_copy(AVDictionary ** dst, AVDictionary * src, int flags)'/>
<doc f='include/libavutil/dict.h' l='109'>/**
 * Copy entries from one AVDictionary struct into another.
 * @param dst pointer to a pointer to a AVDictionary struct. If *dst is NULL,
 *            this function will allocate a struct for you and put it in *dst
 * @param src pointer to source AVDictionary struct
 * @param flags flags to use when setting entries in *dst
 * @note metadata is read using the AV_DICT_IGNORE_SUFFIX flag
 */</doc>
<use f='vlc/modules/demux/avformat/demux.c' l='299' u='c' c='OpenDemux'/>
