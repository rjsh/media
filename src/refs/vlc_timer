<def f='vlc/src/posix/timer.c' l='41'/>
<size>136</size>
<doc f='vlc/src/posix/timer.c' l='32'>/*
 * POSIX timers are essentially unusable from a library: there provide no safe
 * way to ensure that a timer has no pending/ongoing iteration. Furthermore,
 * they typically require one thread per timer plus one thread per iteration,
 * which is inefficient and overkill (unless you need multiple iteration
 * of the same timer concurrently).
 * Thus, this is a generic manual implementation of timers using a thread.
 */</doc>
<mbr r='vlc_timer::thread' o='0' t='vlc_thread_t'/>
<mbr r='vlc_timer::reschedule' o='64' t='vlc_cond_t'/>
<mbr r='vlc_timer::lock' o='448' t='vlc_mutex_t'/>
<mbr r='vlc_timer::func' o='768' t='void (*)(void *)'/>
<mbr r='vlc_timer::data' o='832' t='void *'/>
<mbr r='vlc_timer::value' o='896' t='mtime_t'/>
<mbr r='vlc_timer::interval' o='960' t='mtime_t'/>
<mbr r='vlc_timer::overruns' o='1024' t='atomic_uint'/>
