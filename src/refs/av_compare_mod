<dec f='ffmpeg/libavutil/mathematics.h' l='195' type='int64_t av_compare_mod(uint64_t a, uint64_t b, uint64_t mod)'/>
<doc f='ffmpeg/libavutil/mathematics.h' l='177'>/**
 * Compare the remainders of two integer operands divided by a common divisor.
 *
 * In other words, compare the least significant `log2(mod)` bits of integers
 * `a` and `b`.
 *
 * @code{.c}
 * av_compare_mod(0x11, 0x02, 0x10) &lt; 0 // since 0x11 % 0x10  (0x1) &lt; 0x02 % 0x10  (0x2)
 * av_compare_mod(0x11, 0x02, 0x20) &gt; 0 // since 0x11 % 0x20 (0x11) &gt; 0x02 % 0x20 (0x02)
 * @endcode
 *
 * @param a,b Operands
 * @param mod Divisor; must be a power of 2
 * @return
 *         - a negative value if `a % mod &lt; b % mod`
 *         - a positive value if `a % mod &gt; b % mod`
 *         - zero             if `a % mod == b % mod`
 */</doc>
<use f='ffmpeg/libavformat/hls.c' l='1866' u='c' c='compare_ts_with_wrapdetect'/>
<use f='ffmpeg/libavformat/utils.c' l='1706' u='c' c='av_read_frame'/>
<use f='ffmpeg/libavformat/utils.c' l='1707' u='c' c='av_read_frame'/>
<def f='ffmpeg/libavutil/mathematics.c' l='160' type='int64_t av_compare_mod(uint64_t a, uint64_t b, uint64_t mod)'/>
