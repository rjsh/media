<dec f='ffmpeg/libavformat/avformat.h' l='2334' type='int avformat_seek_file(AVFormatContext * s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags)'/>
<doc f='ffmpeg/libavformat/avformat.h' l='2306'>/**
 * Seek to timestamp ts.
 * Seeking will be done so that the point from which all active streams
 * can be presented successfully will be closest to ts and within min/max_ts.
 * Active streams are all streams that have AVStream.discard &lt; AVDISCARD_ALL.
 *
 * If flags contain AVSEEK_FLAG_BYTE, then all timestamps are in bytes and
 * are the file position (this may not be supported by all demuxers).
 * If flags contain AVSEEK_FLAG_FRAME, then all timestamps are in frames
 * in the stream with stream_index (this may not be supported by all demuxers).
 * Otherwise all timestamps are in units of the stream selected by stream_index
 * or if stream_index is -1, in AV_TIME_BASE units.
 * If flags contain AVSEEK_FLAG_ANY, then non-keyframes are treated as
 * keyframes (this may not be supported by all demuxers).
 * If flags contain AVSEEK_FLAG_BACKWARD, it is ignored.
 *
 * @param s media file handle
 * @param stream_index index of the stream which is used as time base reference
 * @param min_ts smallest acceptable timestamp
 * @param ts target timestamp
 * @param max_ts largest acceptable timestamp
 * @param flags flags
 * @return &gt;=0 on success, error code otherwise
 *
 * @note This is part of the new seek API which is still under construction.
 *       Thus do not use this yet. It may change at any time, do not expect
 *       ABI compatibility yet!
 */</doc>
<use f='ffmpeg/ffmpeg_opt.c' l='1054' u='c' c='open_input_file'/>
<use f='ffmpeg/ffprobe.c' l='2070' u='c' c='read_interval_packets'/>
<use f='ffmpeg/libavformat/avidec.c' l='1787' u='c' c='seek_subtitle'/>
<use f='ffmpeg/libavformat/avidec.c' l='1788' u='c' c='seek_subtitle'/>
<use f='ffmpeg/libavformat/concatdec.c' l='355' u='c' c='open_file'/>
<use f='ffmpeg/libavformat/concatdec.c' l='688' u='c' c='try_seek'/>
<use f='ffmpeg/libavformat/utils.c' l='2423' u='c' c='av_seek_frame'/>
<def f='ffmpeg/libavformat/utils.c' l='2435' type='int avformat_seek_file(AVFormatContext * s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags)'/>
<dec f='include/libavformat/avformat.h' l='1374' type='int avformat_seek_file(AVFormatContext * s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags)'/>
<doc f='include/libavformat/avformat.h' l='1348'>/**
 * Seek to timestamp ts.
 * Seeking will be done so that the point from which all active streams
 * can be presented successfully will be closest to ts and within min/max_ts.
 * Active streams are all streams that have AVStream.discard &lt; AVDISCARD_ALL.
 *
 * If flags contain AVSEEK_FLAG_BYTE, then all timestamps are in bytes and
 * are the file position (this may not be supported by all demuxers).
 * If flags contain AVSEEK_FLAG_FRAME, then all timestamps are in frames
 * in the stream with stream_index (this may not be supported by all demuxers).
 * Otherwise all timestamps are in units of the stream selected by stream_index
 * or if stream_index is -1, in AV_TIME_BASE units.
 * If flags contain AVSEEK_FLAG_ANY, then non-keyframes are treated as
 * keyframes (this may not be supported by all demuxers).
 *
 * @param stream_index index of the stream which is used as time base reference
 * @param min_ts smallest acceptable timestamp
 * @param ts target timestamp
 * @param max_ts largest acceptable timestamp
 * @param flags flags
 * @return &gt;=0 on success, error code otherwise
 *
 * @note This is part of the new seek API which is still under construction.
 *       Thus do not use this yet. It may change at any time, do not expect
 *       ABI compatibility yet!
 */</doc>
