<dec f='ffmpeg/libavcodec/celp_math.h' l='37' type='float (*)(const float *, const float *, int)'/>
<offset>0</offset>
<doc f='ffmpeg/libavcodec/celp_math.h' l='29'>/**
     * Return the dot product.
     * @param a input data array
     * @param b input data array
     * @param length number of elements
     *
     * @return dot product = sum of elementwise products
     */</doc>
<use f='ffmpeg/libavcodec/amrnbdec.c' l='808' u='r' c='synthesis'/>
<use f='ffmpeg/libavcodec/amrnbdec.c' l='888' u='r' c='tilt_factor'/>
<use f='ffmpeg/libavcodec/amrnbdec.c' l='889' u='r' c='tilt_factor'/>
<use f='ffmpeg/libavcodec/amrnbdec.c' l='909' u='r' c='postfilter'/>
<use f='ffmpeg/libavcodec/amrnbdec.c' l='1015' u='r' c='amrnb_decode_frame'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='607' u='r' c='voice_factor'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='610' u='r' c='voice_factor'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='780' u='r' c='synthesis'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='841' u='r' c='upsample_5_4'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='869' u='r' c='find_hb_gain'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='870' u='r' c='find_hb_gain'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='889' u='r' c='scaled_hb_excitation'/>
<use f='ffmpeg/libavcodec/amrwbdec.c' l='1184' u='r' c='amrwb_decode_frame'/>
<use f='ffmpeg/libavcodec/celp_math.c' l='122' u='w' c='ff_celp_math_init'/>
