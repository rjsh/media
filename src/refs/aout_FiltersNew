<dec f='vlc/include/vlc_aout.h' l='325' type='aout_filters_t * aout_FiltersNew(vlc_object_t * , const audio_sample_format_t * , const audio_sample_format_t * , const aout_request_vout_t * )'/>
<use f='vlc/modules/stream_out/transcode/audio.c' l='73' macro='1' u='c'/>
<use f='vlc/src/audio_output/dec.c' l='88' macro='1' u='c'/>
<use f='vlc/src/audio_output/dec.c' l='154' macro='1' u='c'/>
<def f='vlc/src/audio_output/filters.c' l='382' type='aout_filters_t * aout_FiltersNew(vlc_object_t * obj, const audio_sample_format_t *restrict infmt, const audio_sample_format_t *restrict outfmt, const aout_request_vout_t * request_vout)'/>
<doc f='vlc/src/audio_output/filters.c' l='368'>/**
 * Sets a chain of audio filters up.
 * \param obj parent object for the filters
 * \param infmt chain input format [IN]
 * \param outfmt chain output format [IN]
 * \param request_vout visualization video output request callback
 * \return a filters chain or NULL on failure
 *
 * \note
 * *request_vout (if not NULL) must remain valid until aout_FiltersDelete().
 *
 * \bug
 * If request_vout is non NULL, obj is assumed to be an audio_output_t pointer.
 */</doc>
