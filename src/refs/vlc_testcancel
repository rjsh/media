<dec f='vlc/include/vlc_threads.h' l='329' type='void vlc_testcancel()'/>
<use f='vlc/modules/misc/fingerprinter.c' l='404' u='c' c='Run'/>
<use f='vlc/src/misc/addons.c' l='370' u='c' c='FinderThread'/>
<use f='vlc/src/misc/block.c' l='595' u='c' c='block_FifoPace'/>
<use f='vlc/src/misc/block.c' l='659' u='c' c='block_FifoGet'/>
<use f='vlc/src/misc/block.c' l='712' u='c' c='block_FifoShow'/>
<use f='vlc/src/network/io.c' l='390' u='c' c='net_Write'/>
<use f='vlc/src/network/io.c' l='449' u='c' c='net_Write'/>
<def f='vlc/src/posix/thread.c' l='824' type='void vlc_testcancel()'/>
<doc f='vlc/src/posix/thread.c' l='817'>/**
 * Issues an explicit deferred cancellation point.
 * This has no effect if thread cancellation is disabled.
 * This can be called when there is a rather slow non-sleeping operation.
 * This is also used to force a cancellation point in a function that would
 * otherwise &quot;not always&quot; be a one (block_FifoGet() is an example).
 */</doc>
