<dec f='ffmpeg/libavutil/hwcontext.h' l='326' type='int av_hwframe_transfer_data(AVFrame * dst, const AVFrame * src, int flags)'/>
<doc f='ffmpeg/libavutil/hwcontext.h' l='305'>/**
 * Copy data to or from a hw surface. At least one of dst/src must have an
 * AVHWFramesContext attached.
 *
 * If src has an AVHWFramesContext attached, then the format of dst (if set)
 * must use one of the formats returned by av_hwframe_transfer_get_formats(src,
 * AV_HWFRAME_TRANSFER_DIRECTION_FROM).
 * If dst has an AVHWFramesContext attached, then the format of src must use one
 * of the formats returned by av_hwframe_transfer_get_formats(dst,
 * AV_HWFRAME_TRANSFER_DIRECTION_TO)
 *
 * dst may be &quot;clean&quot; (i.e. with data/buf pointers unset), in which case the
 * data buffers will be allocated by this function using av_frame_get_buffer().
 * If dst-&gt;format is set, then this format will be used, otherwise (when
 * dst-&gt;format is AV_PIX_FMT_NONE) the first acceptable format will be chosen.
 *
 * @param dst the destination frame. dst is not touched on failure.
 * @param src the source frame.
 * @param flags currently unused, should be set to zero
 * @return 0 on success, a negative AVERROR error code on failure.
 */</doc>
<use f='ffmpeg/ffmpeg_vaapi.c' l='122' u='c' c='vaapi_retrieve_data'/>
<use f='ffmpeg/ffmpeg_vdpau.c' l='66' u='c' c='vdpau_retrieve_data'/>
<use f='ffmpeg/libavfilter/vf_hwdownload.c' l='151' u='c' c='hwdownload_filter_frame'/>
<use f='ffmpeg/libavfilter/vf_hwupload.c' l='179' u='c' c='hwupload_filter_frame'/>
<use f='ffmpeg/libavutil/hwcontext.c' l='353' u='c' c='transfer_data_alloc'/>
<def f='ffmpeg/libavutil/hwcontext.c' l='364' type='int av_hwframe_transfer_data(AVFrame * dst, const AVFrame * src, int flags)'/>
