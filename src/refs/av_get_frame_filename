<dec f='ffmpeg/libavformat/avformat.h' l='2788' type='int av_get_frame_filename(char * buf, int buf_size, const char * path, int number)'/>
<use f='ffmpeg/libavformat/img2dec.c' l='115' u='c' c='find_image_range'/>
<use f='ffmpeg/libavformat/img2dec.c' l='137' u='c' c='find_image_range'/>
<use f='ffmpeg/libavformat/img2dec.c' l='396' u='c' c='ff_img_read_packet'/>
<use f='ffmpeg/libavformat/segment.c' l='210' u='c' c='set_segment_filename'/>
<use f='ffmpeg/libavformat/utils.c' l='310' u='c' c='av_filename_number_test'/>
<def f='ffmpeg/libavformat/utils.c' l='4435' type='int av_get_frame_filename(char * buf, int buf_size, const char * path, int number)'/>
<use f='ffmpeg/libavformat/webm_chunk.c' l='101' u='c' c='get_chunk_filename'/>
<dec f='include/libavformat/avformat.h' l='1673' type='int av_get_frame_filename(char * buf, int buf_size, const char * path, int number)'/>
<doc f='include/libavformat/avformat.h' l='1661'>/**
 * Return in &apos;buf&apos; the path with &apos;%d&apos; replaced by a number.
 *
 * Also handles the &apos;%0nd&apos; format where &apos;n&apos; is the total number
 * of digits and &apos;%%&apos;.
 *
 * @param buf destination buffer
 * @param buf_size destination buffer size
 * @param path numbered sequence string
 * @param number frame number
 * @return 0 if OK, -1 on format error
 */</doc>
