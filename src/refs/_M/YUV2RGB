<dec f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='84'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='217' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='245' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='329' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='347' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='391' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='413' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='434' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='456' u='c'/>
<dec f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='84'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='329' u='c'/>
<use f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='347' u='c'/>
<doc f='ffmpeg/libswscale/x86/yuv2rgb_template.c' l='68'>/* YUV2RGB core
 * Conversion is performed in usual way:
 * R = Y&apos; * Ycoef + Vred * V&apos;
 * G = Y&apos; * Ycoef + Vgreen * V&apos; + Ugreen * U&apos;
 * B = Y&apos; * Ycoef               + Ublue * U&apos;
 *
 * where X&apos; = X * 8 - Xoffset (multiplication is performed to increase
 * precision a bit).
 * Since it operates in YUV420 colorspace, Y component is additionally
 * split into Y1 and Y2 for even and odd pixels.
 *
 * Input:
 * mm0 - U (4 elems), mm1 - V (4 elems), mm6 - Y (8 elems), mm4 - zero register
 * Output:
 * mm1 - R, mm2 - G, mm0 - B
 */</doc>
<dec f='include/dc1394/conversions.h' l='72'/>
<doc f='include/dc1394/conversions.h' l='70'>// color conversion functions from Bart Nabbe.
// corrected by Damien: bad coeficients in YUV2RGB</doc>
