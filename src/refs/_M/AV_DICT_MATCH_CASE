<dec f='ffmpeg/libavutil/dict.h' l='69'/>
<doc f='ffmpeg/libavutil/dict.h' l='37'>/**
 * @addtogroup lavu_dict AVDictionary
 * @ingroup lavu_data
 *
 * @brief Simple key:value store
 *
 * @{
 * Dictionaries are used for storing key:value pairs. To create
 * an AVDictionary, simply pass an address of a NULL pointer to
 * av_dict_set(). NULL can be used as an empty dictionary wherever
 * a pointer to an AVDictionary is required.
 * Use av_dict_get() to retrieve an entry or iterate over all
 * entries and finally av_dict_free() to free the dictionary
 * and all its contents.
 *
 @code
   AVDictionary *d = NULL;           // &quot;create&quot; an empty dictionary
   AVDictionaryEntry *t = NULL;

   av_dict_set(&amp;d, &quot;foo&quot;, &quot;bar&quot;, 0); // add an entry

   char *k = av_strdup(&quot;key&quot;);       // if your strings are already allocated,
   char *v = av_strdup(&quot;value&quot;);     // you can avoid copying them like this
   av_dict_set(&amp;d, k, v, AV_DICT_DONT_STRDUP_KEY | AV_DICT_DONT_STRDUP_VAL);

   while (t = av_dict_get(d, &quot;&quot;, t, AV_DICT_IGNORE_SUFFIX)) {
       &lt;....&gt;                             // iterate over all entries in d
   }
   av_dict_free(&amp;d);
 @endcode
 */</doc>
<use f='ffmpeg/libavfilter/vf_cover_rect.c' l='143' u='c'/>
<use f='ffmpeg/libavfilter/vf_cover_rect.c' l='144' u='c'/>
<use f='ffmpeg/libavfilter/vf_cover_rect.c' l='145' u='c'/>
<use f='ffmpeg/libavfilter/vf_cover_rect.c' l='146' u='c'/>
<use f='ffmpeg/ffmpeg.c' l='601' u='c'/>
<use f='ffmpeg/ffmpeg_opt.c' l='992' u='c'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1005' u='c'/>
<use f='ffmpeg/ffprobe.c' l='2554' u='c'/>
<use f='ffmpeg/ffprobe.c' l='2565' u='c'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='142' u='c'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='151' u='c'/>
<use f='ffmpeg/libavfilter/vf_subtitles.c' l='283' u='c'/>
<use f='ffmpeg/libavfilter/vf_subtitles.c' l='362' u='c'/>
<use f='ffmpeg/libavformat/hls.c' l='917' u='c'/>
<use f='ffmpeg/libavformat/id3v2.c' l='534' u='c'/>
<use f='ffmpeg/libavformat/mov.c' l='1882' u='c'/>
<use f='ffmpeg/libavformat/riffenc.c' l='321' u='c'/>
<use f='ffmpeg/libavformat/riffenc.c' l='344' u='c'/>
<use f='ffmpeg/libavutil/dict.c' l='55' u='c'/>
<dec f='include/libavutil/dict.h' l='61'/>
<doc f='include/libavutil/dict.h' l='28'>/**
 * @addtogroup lavu_dict AVDictionary
 * @ingroup lavu_data
 *
 * @brief Simple key:value store
 *
 * @{
 * Dictionaries are used for storing key:value pairs. To create
 * an AVDictionary, simply pass an address of a NULL pointer to
 * av_dict_set(). NULL can be used as an empty dictionary wherever
 * a pointer to an AVDictionary is required.
 * Use av_dict_get() to retrieve an entry or iterate over all
 * entries and finally av_dict_free() to free the dictionary
 * and all its contents.
 *
 * @code
 * AVDictionary *d = NULL;                // &quot;create&quot; an empty dictionary
 * av_dict_set(&amp;d, &quot;foo&quot;, &quot;bar&quot;, 0);      // add an entry
 *
 * char *k = av_strdup(&quot;key&quot;);            // if your strings are already allocated,
 * char *v = av_strdup(&quot;value&quot;);          // you can avoid copying them like this
 * av_dict_set(&amp;d, k, v, AV_DICT_DONT_STRDUP_KEY | AV_DICT_DONT_STRDUP_VAL);
 *
 * AVDictionaryEntry *t = NULL;
 * while (t = av_dict_get(d, &quot;&quot;, t, AV_DICT_IGNORE_SUFFIX)) {
 *     &lt;....&gt;                             // iterate over all entries in d
 * }
 *
 * av_dict_free(&amp;d);
 * @endcode
 *
 */</doc>
