<dec f='include/theora/theoraenc.h' l='297'/>
<use f='ffmpeg/libavcodec/libtheoraenc.c' l='129' u='a'/>
<use f='ffmpeg/libavcodec/libtheoraenc.c' l='146' u='c'/>
<doc f='include/theora/theoraenc.h' l='252'>/**Submits two-pass encoding metric data collected the first encoding pass to
 *  the second pass.
 * The first call must be made before the first frame is encoded, and a target
 *  bitrate must have already been specified to the encoder.
 * It sets the encoder to pass 2 mode implicitly; this cannot be disabled.
 * The encoder may require reading data from some or all of the frames in
 *  advance, depending on, e.g., the reservoir size used in the second pass.
 * You must call this function repeatedly before each frame to provide data
 *  until either a) it fails to consume all of the data presented or b) all of
 *  the pass 1 data has been consumed.
 * In the first case, you must save the remaining data to be presented after
 *  the next frame.
 * You can call this function with a NULL argument to get an upper bound on
 *  the number of bytes that will be required before the next frame.
 *
 * When pass 2 is first enabled, the default bit reservoir is set to the entire
 *  file; this gives maximum flexibility but can lead to very high peak rates.
 * You can subsequently set it to another value with #TH_ENCCTL_SET_RATE_BUFFER
 *  (e.g., to set it to the keyframe interval for non-live streaming), however,
 *  you may then need to provide more data before the next frame.
 *
 * \param[in] _buf &lt;tt&gt;char[]&lt;/tt&gt;: A buffer containing the data returned by
 *                  #TH_ENCCTL_2PASS_OUT in pass 1.
 *                 You may pass &lt;tt&gt;NULL&lt;/tt&gt; for \a _buf to return an upper
 *                  bound on the number of additional bytes needed before the
 *                  next frame.
 *                 The summary data returned at the end of pass 1 must be at
 *                  the head of the buffer on the first call with a
 *                  non-&lt;tt&gt;NULL&lt;/tt&gt; \a _buf, and the placeholder data
 *                  returned at the start of pass 1 should be omitted.
 *                 After each call you should advance this buffer by the number
 *                  of bytes consumed.
 * \retval &gt;0            The number of bytes of metric data required/consumed.
 * \retval 0             No more data is required before the next frame.
 * \retval TH_EFAULT     \a _enc_ctx is &lt;tt&gt;NULL&lt;/tt&gt;.
 * \retval TH_EINVAL     No target bitrate has been set, or the first call was
 *                        made after the first frame was submitted for
 *                        encoding.
 * \retval TH_ENOTFORMAT The data did not appear to be pass 1 from a compatible
 *                        implementation of this library.
 * \retval TH_EBADHEADER The data was invalid; this may be returned when
 *                        attempting to read an aborted pass 1 file that still
 *                        has the placeholder data in place of the summary
 *                        data.
 * \retval TH_EIMPL       Not supported by this implementation.*/</doc>
