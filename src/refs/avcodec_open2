<dec f='ffmpeg/libavcodec/avcodec.h' l='4323' type='int avcodec_open2(AVCodecContext * avctx, const AVCodec * codec, AVDictionary ** options)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='4285'>/**
 * Initialize the AVCodecContext to use the given AVCodec. Prior to using this
 * function the context has to be allocated with avcodec_alloc_context3().
 *
 * The functions avcodec_find_decoder_by_name(), avcodec_find_encoder_by_name(),
 * avcodec_find_decoder() and avcodec_find_encoder() provide an easy way for
 * retrieving a codec.
 *
 * @warning This function is not thread safe!
 *
 * @note Always call this function before using decoding routines (such as
 * @ref avcodec_receive_frame()).
 *
 * @code
 * avcodec_register_all();
 * av_dict_set(&amp;opts, &quot;b&quot;, &quot;2.5M&quot;, 0);
 * codec = avcodec_find_decoder(AV_CODEC_ID_H264);
 * if (!codec)
 *     exit(1);
 *
 * context = avcodec_alloc_context3(codec);
 *
 * if (avcodec_open2(context, codec, opts) &lt; 0)
 *     exit(1);
 * @endcode
 *
 * @param avctx The context to initialize.
 * @param codec The codec to open this context for. If a non-NULL codec has been
 *              previously passed to avcodec_alloc_context3() or
 *              for this context, then this parameter MUST be either NULL or
 *              equal to the previously passed codec.
 * @param options A dictionary filled with AVCodecContext and codec-private options.
 *                On return this object will be filled with options that were not found.
 *
 * @return zero on success, a negative value on error
 * @see avcodec_alloc_context3(), avcodec_find_decoder(), avcodec_find_encoder(),
 *      av_dict_set(), av_opt_find().
 */</doc>
<use f='ffmpeg/libavfilter/lavfutils.c' l='62' u='c' c='ff_load_image'/>
<use f='ffmpeg/libavfilter/src_movie.c' l='173' u='c' c='open_stream'/>
<use f='ffmpeg/ffmpeg.c' l='2727' u='c' c='init_input_stream'/>
<use f='ffmpeg/ffmpeg.c' l='3023' u='c' c='init_output_stream'/>
<use f='ffmpeg/ffprobe.c' l='2631' u='c' c='open_input_file'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='206' u='c' c='ff_frame_thread_encoder_init'/>
<use f='ffmpeg/libavcodec/mpegvideo_enc.c' l='1445' u='c' c='estimate_best_b_count'/>
<use f='ffmpeg/libavcodec/utils.c' l='1235' u='c' c='ff_codec_open2_recursive'/>
<def f='ffmpeg/libavcodec/utils.c' l='1241' type='int avcodec_open2(AVCodecContext * avctx, const AVCodec * codec, AVDictionary ** options)'/>
<use f='ffmpeg/libavfilter/vf_mcdeint.c' l='145' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_subtitles.c' l='416' u='c' c='init_subtitles'/>
<use f='ffmpeg/libavfilter/vf_uspp.c' l='364' u='c' c='config_input'/>
<use f='ffmpeg/libavformat/utils.c' l='2937' u='c' c='try_decode_frame'/>
<use f='ffmpeg/libavformat/utils.c' l='3434' u='c' c='avformat_find_stream_info'/>
<use f='ffmpeg/libavformat/utils.c' l='3442' u='c' c='avformat_find_stream_info'/>
<use f='ffmpeg/libavformat/utils.c' l='3684' u='c' c='avformat_find_stream_info'/>
<dec f='include/libavcodec/avcodec.h' l='3376' type='int avcodec_open2(AVCodecContext * avctx, const AVCodec * codec, AVDictionary ** options)'/>
<doc f='include/libavcodec/avcodec.h' l='3340'>/**
 * Initialize the AVCodecContext to use the given AVCodec. Prior to using this
 * function the context has to be allocated with avcodec_alloc_context3().
 *
 * The functions avcodec_find_decoder_by_name(), avcodec_find_encoder_by_name(),
 * avcodec_find_decoder() and avcodec_find_encoder() provide an easy way for
 * retrieving a codec.
 *
 * @warning This function is not thread safe!
 *
 * @code
 * avcodec_register_all();
 * av_dict_set(&amp;opts, &quot;b&quot;, &quot;2.5M&quot;, 0);
 * codec = avcodec_find_decoder(AV_CODEC_ID_H264);
 * if (!codec)
 *     exit(1);
 *
 * context = avcodec_alloc_context3(codec);
 *
 * if (avcodec_open2(context, codec, opts) &lt; 0)
 *     exit(1);
 * @endcode
 *
 * @param avctx The context to initialize.
 * @param codec The codec to open this context for. If a non-NULL codec has been
 *              previously passed to avcodec_alloc_context3() or
 *              avcodec_get_context_defaults3() for this context, then this
 *              parameter MUST be either NULL or equal to the previously passed
 *              codec.
 * @param options A dictionary filled with AVCodecContext and codec-private options.
 *                On return this object will be filled with options that were not found.
 *
 * @return zero on success, a negative value on error
 * @see avcodec_alloc_context3(), avcodec_find_decoder(), avcodec_find_encoder(),
 *      av_dict_set(), av_opt_find().
 */</doc>
<use f='vlc/modules/codec/avcodec/avcodec.c' l='427' u='c' c='ffmpeg_OpenCodec'/>
<use f='vlc/modules/codec/avcodec/encoder.c' l='837' u='c' c='OpenEncoder'/>
<use f='vlc/modules/codec/avcodec/encoder.c' l='914' u='c' c='OpenEncoder'/>
<use f='vlc/modules/codec/avcodec/subtitle.c' l='94' u='c' c='InitSubtitleDec'/>
