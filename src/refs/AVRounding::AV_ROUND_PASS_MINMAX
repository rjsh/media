<dec f='ffmpeg/libavutil/mathematics.h' l='108' type='8192'/>
<doc f='ffmpeg/libavutil/mathematics.h' l='85'>/**
     * Flag telling rescaling functions to pass `INT64_MIN`/`MAX` through
     * unchanged, avoiding special cases for #AV_NOPTS_VALUE.
     *
     * Unlike other values of the enumeration AVRounding, this value is a
     * bitmask that must be used in conjunction with another value of the
     * enumeration through a bitwise OR, in order to set behavior for normal
     * cases.
     *
     * @code{.c}
     * av_rescale_rnd(3, 1, 2, AV_ROUND_UP | AV_ROUND_PASS_MINMAX);
     * // Rescaling 3:
     * //     Calculating 3 * 1 / 2
     * //     3 / 2 is rounded up to 2
     * //     =&gt; 2
     *
     * av_rescale_rnd(AV_NOPTS_VALUE, 1, 2, AV_ROUND_UP | AV_ROUND_PASS_MINMAX);
     * // Rescaling AV_NOPTS_VALUE:
     * //     AV_NOPTS_VALUE == INT64_MIN
     * //     AV_NOPTS_VALUE is passed through
     * //     =&gt; AV_NOPTS_VALUE
     * @endcode
     */</doc>
<use f='ffmpeg/libavdevice/lavfi.c' l='418' u='r' c='lavfi_read_packet'/>
<use f='ffmpeg/ffmpeg.c' l='4166' u='r' c='process_input'/>
<use f='ffmpeg/ffmpeg.c' l='4194' u='r' c='process_input'/>
<use f='ffmpeg/libavformat/concatdec.c' l='668' u='r' c='rescale_interval'/>
<use f='ffmpeg/libavformat/concatdec.c' l='670' u='r' c='rescale_interval'/>
<use f='ffmpeg/libavformat/mpeg.c' l='982' u='r' c='vobsub_read_seek'/>
<use f='ffmpeg/libavformat/mpeg.c' l='985' u='r' c='vobsub_read_seek'/>
<use f='ffmpeg/libavformat/utils.c' l='2456' u='r' c='avformat_seek_file'/>
<use f='ffmpeg/libavformat/utils.c' l='2459' u='r' c='avformat_seek_file'/>
<use f='ffmpeg/libavformat/utils.c' l='2550' u='r' c='update_stream_timings'/>
<use f='ffmpeg/libavutil/mathematics.c' l='65' u='r' c='av_rescale_rnd'/>
<use f='ffmpeg/libavutil/mathematics.c' l='65' u='r' c='av_rescale_rnd'/>
<use f='ffmpeg/libavutil/mathematics.c' l='68' u='r' c='av_rescale_rnd'/>
<use f='ffmpeg/libavutil/mathematics.c' l='71' u='r' c='av_rescale_rnd'/>
