<dec f='ffmpeg/libavcodec/avcodec.h' l='4949' type='int avcodec_send_frame(AVCodecContext * avctx, const AVFrame * frame)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='4916'>/**
 * Supply a raw video or audio frame to the encoder. Use avcodec_receive_packet()
 * to retrieve buffered output packets.
 *
 * @param avctx     codec context
 * @param[in] frame AVFrame containing the raw audio or video frame to be encoded.
 *                  Ownership of the frame remains with the caller, and the
 *                  encoder will not write to the frame. The encoder may create
 *                  a reference to the frame data (or copy it if the frame is
 *                  not reference-counted).
 *                  It can be NULL, in which case it is considered a flush
 *                  packet.  This signals the end of the stream. If the encoder
 *                  still has packets buffered, it will return them after this
 *                  call. Once flushing mode has been entered, additional flush
 *                  packets are ignored, and sending frames will return
 *                  AVERROR_EOF.
 *
 *                  For audio:
 *                  If AV_CODEC_CAP_VARIABLE_FRAME_SIZE is set, then each frame
 *                  can have any number of samples.
 *                  If it is not set, frame-&gt;nb_samples must be equal to
 *                  avctx-&gt;frame_size for all frames except the last.
 *                  The final frame may be smaller than avctx-&gt;frame_size.
 * @return 0 on success, otherwise negative error code:
 *      AVERROR(EAGAIN):   input is not accepted right now - the frame must be
 *                         resent after trying to read output packets
 *      AVERROR_EOF:       the encoder has been flushed, and no new frames can
 *                         be sent to it
 *      AVERROR(EINVAL):   codec not opened, refcounted_frames not set, it is a
 *                         decoder, or requires flush
 *      AVERROR(ENOMEM):   failed to add packet to internal queue, or similar
 *      other errors: legitimate decoding errors
 */</doc>
<use f='ffmpeg/ffmpeg.c' l='888' u='c' c='do_audio_out'/>
<use f='ffmpeg/ffmpeg.c' l='1250' u='c' c='do_video_out'/>
<use f='ffmpeg/ffmpeg.c' l='1805' u='c' c='flush_encoders'/>
<def f='ffmpeg/libavcodec/utils.c' l='2961' type='int avcodec_send_frame(AVCodecContext * avctx, const AVFrame * frame)'/>
