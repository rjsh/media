<dec f='ffmpeg/libavutil/adler32.h' l='53' type='unsigned long av_adler32_update(unsigned long adler, const uint8_t * buf, unsigned int len)'/>
<use f='ffmpeg/libavfilter/af_ashowinfo.c' l='197' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/af_ashowinfo.c' l='198' u='c' c='filter_frame'/>
<doc f='ffmpeg/libavutil/adler32.h' l='41'>/**
 * Calculate the Adler32 checksum of a buffer.
 *
 * Passing the return value to a subsequent av_adler32_update() call
 * allows the checksum of multiple buffers to be calculated as though
 * they were concatenated.
 *
 * @param adler initial checksum value
 * @param buf   pointer to input buffer
 * @param len   size of input buffer
 * @return      updated checksum
 */</doc>
<use f='ffmpeg/libavfilter/vf_showinfo.c' l='97' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/vf_showinfo.c' l='98' u='c' c='filter_frame'/>
<use f='ffmpeg/libavformat/crcenc.c' l='44' u='c' c='crc_write_packet'/>
<use f='ffmpeg/libavformat/framecrcenc.c' l='36' u='c' c='framecrc_write_header'/>
<use f='ffmpeg/libavformat/framecrcenc.c' l='47' u='c' c='framecrc_write_packet'/>
<use f='ffmpeg/libavformat/framecrcenc.c' l='62' u='c' c='framecrc_write_packet'/>
<use f='ffmpeg/libavformat/framecrcenc.c' l='67' u='c' c='framecrc_write_packet'/>
<use f='ffmpeg/libavformat/uncodedframecrcenc.c' l='70' u='c' c='video_frame_cksum'/>
<def f='ffmpeg/libavutil/adler32.c' l='44' type='unsigned long av_adler32_update(unsigned long adler, const uint8_t * buf, unsigned int len)'/>
<use f='ffmpeg/libavutil/hash.c' l='175' u='c' c='av_hash_update'/>
