<dec f='ffmpeg/libavformat/rdt.h' l='90' type='int ff_rdt_parse_header(const uint8_t * buf, int len, int * pset_id, int * pseq_no, int * pstream_id, int * pis_keyframe, uint32_t * ptimestamp)'/>
<doc f='ffmpeg/libavformat/rdt.h' l='78'>/**
 * Parse RDT-style packet header.
 *
 * @param buf input buffer
 * @param len length of input buffer
 * @param pset_id will be set to the set ID this packet belongs to
 * @param pseq_no will be set to the sequence number of the packet
 * @param pstream_id will be set to the stream ID this packet belongs to
 * @param pis_keyframe will be whether this packet belongs to a keyframe
 * @param ptimestamp will be set to the timestamp of the packet
 * @return the amount of bytes consumed, or negative on error
 */</doc>
<def f='ffmpeg/libavformat/rdt.c' l='190' type='int ff_rdt_parse_header(const uint8_t * buf, int len, int * pset_id, int * pseq_no, int * pstream_id, int * pis_keyframe, uint32_t * ptimestamp)'/>
<use f='ffmpeg/libavformat/rdt.c' l='357' u='c' c='ff_rdt_parse_packet'/>
<doc f='ffmpeg/libavformat/rdt.c' l='185'>/**
 * Actual data handling.
 */</doc>
<use f='ffmpeg/libavformat/rtspdec.c' l='786' u='c' c='ff_rtsp_tcp_read_packet'/>
