<dec f='ffmpeg/libavformat/avformat.h' l='2825' type='int av_match_ext(const char * filename, const char * extensions)'/>
<doc f='ffmpeg/libavformat/avformat.h' l='2818'>/**
 * Return a positive value if the given filename has one of the given
 * extensions, 0 otherwise.
 *
 * @param filename   file name to check against the given extensions
 * @param extensions a comma-separated list of filename extensions
 */</doc>
<use f='ffmpeg/ffserver.c' l='1485' u='c' c='http_parse_request'/>
<use f='ffmpeg/ffserver.c' l='1488' u='c' c='http_parse_request'/>
<use f='ffmpeg/ffserver.c' l='1492' u='c' c='http_parse_request'/>
<use f='ffmpeg/ffserver.c' l='1495' u='c' c='http_parse_request'/>
<use f='ffmpeg/ffserver.c' l='1498' u='c' c='http_parse_request'/>
<def f='ffmpeg/libavformat/format.c' l='85' type='int av_match_ext(const char * filename, const char * extensions)'/>
<use f='ffmpeg/libavformat/format.c' l='122' u='c' c='av_guess_format'/>
<use f='ffmpeg/libavformat/format.c' l='212' u='c' c='av_probe_input_format3'/>
<use f='ffmpeg/libavformat/format.c' l='227' u='c' c='av_probe_input_format3'/>
<use f='ffmpeg/libavformat/img2dec.c' l='171' u='c' c='img_read_probe'/>
<use f='ffmpeg/libavformat/img2dec.c' l='171' u='c' c='img_read_probe'/>
<use f='ffmpeg/libavformat/img2dec.c' l='897' u='c' c='pgm_probe'/>
<use f='ffmpeg/libavformat/img2dec.c' l='903' u='c' c='pgmyuv_probe'/>
<use f='ffmpeg/libavformat/movenc.c' l='1208' u='c' c='ipod_get_codec_tag'/>
<use f='ffmpeg/libavformat/movenc.c' l='1209' u='c' c='ipod_get_codec_tag'/>
<use f='ffmpeg/libavformat/movenc.c' l='1210' u='c' c='ipod_get_codec_tag'/>
<use f='ffmpeg/libavformat/mpegtsenc.c' l='993' u='c' c='mpegts_init'/>
<use f='ffmpeg/libavformat/nsvdec.c' l='747' u='c' c='nsv_probe'/>
<use f='ffmpeg/libavformat/segment.c' l='705' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/segment.c' l='706' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/segment.c' l='707' u='c' c='seg_init'/>
<use f='ffmpeg/libavformat/segment.c' l='708' u='c' c='seg_init'/>
<dec f='include/libavformat/avformat.h' l='1709' type='int av_match_ext(const char * filename, const char * extensions)'/>
<doc f='include/libavformat/avformat.h' l='1703'>/**
 * Return a positive value if the given filename has one of the given
 * extensions, 0 otherwise.
 *
 * @param extensions a comma-separated list of filename extensions
 */</doc>
