<dec f='ffmpeg/libavutil/rational.h' l='176' type='AVRational av_d2q(double d, int max)'/>
<doc f='ffmpeg/libavutil/rational.h' l='165'>/**
 * Convert a double precision floating point number to a rational.
 *
 * In case of infinity, the returned value is expressed as `{1, 0}` or
 * `{-1, 0}` depending on the sign.
 *
 * @param d   `double` to convert
 * @param max Maximum allowed numerator and denominator
 * @return `d` in AVRational form
 * @see av_q2d()
 */</doc>
<use f='ffmpeg/libavfilter/settb.c' l='91' u='c' c='config_output_props'/>
<use f='ffmpeg/libavfilter/vf_aspect.c' l='86' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_aspect.c' l='137' u='c' c='get_aspect_ratio'/>
<use f='ffmpeg/libavcodec/dpx.c' l='164' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/exr.c' l='1576' u='c' c='decode_header'/>
<use f='ffmpeg/libavcodec/mpeg12dec.c' l='1245' u='c' c='mpeg_decode_postinit'/>
<use f='ffmpeg/libavformat/4xm.c' l='244' u='c' c='fourxm_read_header'/>
<use f='ffmpeg/libavformat/mgsts.c' l='57' u='c' c='read_header'/>
<use f='ffmpeg/libavformat/microdvddec.c' l='113' u='c' c='microdvd_read_header'/>
<use f='ffmpeg/libavformat/mov.c' l='3628' u='c' c='mov_read_trak'/>
<use f='ffmpeg/libavformat/mov.c' l='3919' u='c' c='mov_read_tkhd'/>
<use f='ffmpeg/libavformat/mvdec.c' l='91' u='c' c='var_read_float'/>
<use f='ffmpeg/libavformat/nuv.c' l='207' u='c' c='nuv_header'/>
<use f='ffmpeg/libavformat/nuv.c' l='212' u='c' c='nuv_header'/>
<use f='ffmpeg/libavformat/thp.c' l='77' u='c' c='thp_read_header'/>
<use f='ffmpeg/libavutil/opt.c' l='143' u='c' c='write_number'/>
<use f='ffmpeg/libavutil/opt.c' l='889' u='c' c='av_opt_get_q'/>
<use f='ffmpeg/libavutil/opt.c' l='923' u='c' c='av_opt_get_video_rate'/>
<use f='ffmpeg/libavutil/opt.c' l='1224' u='c' c='opt_list'/>
<use f='ffmpeg/libavutil/opt.c' l='1304' u='c' c='av_opt_set_defaults2'/>
<use f='ffmpeg/libavutil/opt.c' l='1885' u='c' c='av_opt_is_set_to_default'/>
<use f='ffmpeg/libavutil/parseutils.c' l='58' u='c' c='av_parse_ratio'/>
<def f='ffmpeg/libavutil/rational.c' l='106' type='AVRational av_d2q(double d, int max)'/>
<dec f='include/libavutil/rational.h' l='136' type='AVRational av_d2q(double d, int max)'/>
<doc f='include/libavutil/rational.h' l='128'>/**
 * Convert a double precision floating point number to a rational.
 * inf is expressed as {1,0} or {-1,0} depending on the sign.
 *
 * @param d double to convert
 * @param max the maximum allowed numerator and denominator
 * @return (AVRational) d
 */</doc>
