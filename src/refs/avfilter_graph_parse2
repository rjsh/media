<dec f='ffmpeg/libavfilter/avfilter.h' l='1053' type='int avfilter_graph_parse2(AVFilterGraph * graph, const char * filters, AVFilterInOut ** inputs, AVFilterInOut ** outputs)'/>
<doc f='ffmpeg/libavfilter/avfilter.h' l='1031'>/**
 * Add a graph described by a string to a graph.
 *
 * @param[in]  graph   the filter graph where to link the parsed graph context
 * @param[in]  filters string to be parsed
 * @param[out] inputs  a linked list of all free (unlinked) inputs of the
 *                     parsed graph will be returned here. It is to be freed
 *                     by the caller using avfilter_inout_free().
 * @param[out] outputs a linked list of all free (unlinked) outputs of the
 *                     parsed graph will be returned here. It is to be freed by the
 *                     caller using avfilter_inout_free().
 * @return zero on success, a negative AVERROR code on error
 *
 * @note This function returns the inputs and outputs that are left
 * unlinked after parsing the graph and the caller then deals with
 * them.
 * @note This function makes no reference whatsoever to already
 * existing parts of the graph and the inputs parameter will on return
 * contain inputs of the newly parsed part of the graph.  Analogously
 * the outputs parameter will contain outputs of the newly created
 * filters.
 */</doc>
<def f='ffmpeg/libavfilter/graphparser.c' l='391' type='int avfilter_graph_parse2(AVFilterGraph * graph, const char * filters, AVFilterInOut ** inputs, AVFilterInOut ** outputs)'/>
<use f='ffmpeg/libavfilter/graphparser.c' l='466' u='c' c='avfilter_graph_parse'/>
<use f='ffmpeg/ffmpeg_filter.c' l='312' u='c' c='init_complex_filtergraph'/>
<use f='ffmpeg/ffmpeg_filter.c' l='1027' u='c' c='configure_filtergraph'/>
