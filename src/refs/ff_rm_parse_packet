<dec f='ffmpeg/libavformat/rm.h' l='72' type='int ff_rm_parse_packet(AVFormatContext * s, AVIOContext * pb, AVStream * st, RMStream * rst, int len, AVPacket * pkt, int * seq, int flags, int64_t ts)'/>
<use f='ffmpeg/libavformat/rdt.c' l='306' u='c' c='rdt_parse_packet'/>
<doc f='ffmpeg/libavformat/rm.h' l='55'>/**
 * Parse one rm-stream packet from the input bytestream.
 *
 * @param s context containing RMContext and AVIOContext for stream reading
 * @param pb context to read the data from
 * @param st stream to which the packet to be read belongs
 * @param rst Real-specific stream information
 * @param len packet length to read from the input
 * @param pkt packet location to store the parsed packet data
 * @param seq pointer to an integer containing the sequence number, may be
 *            updated
 * @param flags the packet flags
 * @param ts timestamp of the current packet
 * @return &lt;0 on error, 0 if a packet was placed in the pkt pointer. A
 *         value &gt;0 means that no data was placed in pkt, but that cached
 *         data is available by calling ff_rm_retrieve_cache().
 */</doc>
<def f='ffmpeg/libavformat/rmdec.c' l='888' type='int ff_rm_parse_packet(AVFormatContext * s, AVIOContext * pb, AVStream * st, RMStream * ast, int len, AVPacket * pkt, int * seq, int flags, int64_t timestamp)'/>
<use f='ffmpeg/libavformat/rmdec.c' l='1052' u='c' c='rm_read_packet'/>
<use f='ffmpeg/libavformat/rmdec.c' l='1369' u='c' c='ivr_read_packet'/>
