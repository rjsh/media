<dec f='ffmpeg/libavfilter/avfilter.h' l='1027' type='int avfilter_graph_parse_ptr(AVFilterGraph * graph, const char * filters, AVFilterInOut ** inputs, AVFilterInOut ** outputs, void * log_ctx)'/>
<use f='ffmpeg/libavdevice/lavfi.c' l='176' u='c' c='lavfi_read_header'/>
<doc f='ffmpeg/libavfilter/avfilter.h' l='1010'>/**
 * Add a graph described by a string to a graph.
 *
 * In the graph filters description, if the input label of the first
 * filter is not specified, &quot;in&quot; is assumed; if the output label of
 * the last filter is not specified, &quot;out&quot; is assumed.
 *
 * @param graph   the filter graph where to link the parsed graph context
 * @param filters string to be parsed
 * @param inputs  pointer to a linked list to the inputs of the graph, may be NULL.
 *                If non-NULL, *inputs is updated to contain the list of open inputs
 *                after the parsing, should be freed with avfilter_inout_free().
 * @param outputs pointer to a linked list to the outputs of the graph, may be NULL.
 *                If non-NULL, *outputs is updated to contain the list of open outputs
 *                after the parsing, should be freed with avfilter_inout_free().
 * @return non negative on success, a negative AVERROR code on error
 */</doc>
<def f='ffmpeg/libavfilter/graphparser.c' l='522' type='int avfilter_graph_parse_ptr(AVFilterGraph * graph, const char * filters, AVFilterInOut ** open_inputs_ptr, AVFilterInOut ** open_outputs_ptr, void * log_ctx)'/>
