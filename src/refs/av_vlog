<dec f='ffmpeg/libavutil/log.h' l='252' type='void av_vlog(void * avcl, int level, const char * fmt, __va_list_tag * vl)'/>
<doc f='ffmpeg/libavutil/log.h' l='237'>/**
 * Send the specified message to the log if the level is less than or equal
 * to the current av_log_level. By default, all logging messages are sent to
 * stderr. This behavior can be altered by setting a different logging callback
 * function.
 * @see av_log_set_callback
 *
 * @param avcl A pointer to an arbitrary struct of which the first field is a
 *        pointer to an AVClass struct.
 * @param level The importance level of the message expressed using a @ref
 *        lavu_log_constants &quot;Logging Constant&quot;.
 * @param fmt The format string (printf-compatible) that specifies how
 *        subsequent arguments are converted to output.
 * @param vl The arguments referenced by the format string.
 */</doc>
<use f='ffmpeg/libavfilter/f_metadata.c' l='174' u='c' c='print_log'/>
<use f='ffmpeg/ffserver_config.c' l='435' u='c' c='vreport_config_error'/>
<use f='ffmpeg/libavcodec/libx264.c' l='109' u='c' c='X264_log'/>
<use f='ffmpeg/libavcodec/utils.c' l='3803' u='c' c='av_log_ask_for_sample'/>
<use f='ffmpeg/libavfilter/vf_subtitles.c' l='91' u='c' c='ass_log'/>
<use f='ffmpeg/libavutil/log.c' l='375' u='c' c='av_log'/>
<def f='ffmpeg/libavutil/log.c' l='379' type='void av_vlog(void * avcl, int level, const char * fmt, __va_list_tag * vl)'/>
<use f='ffmpeg/libavutil/log.c' l='414' u='c' c='missing_feature_sample'/>
<dec f='include/libavutil/log.h' l='144' type='void av_vlog(void * avcl, int level, const char * fmt, __va_list_tag * )'/>
