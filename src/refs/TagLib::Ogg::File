<inh f='include/taglib/tfile.h' l='50' c='TagLib::File'/>
<def f='include/taglib/oggfile.h' l='50'/>
<ovr f='include/taglib/opusfile.h' l='55' c='TagLib::Ogg::Opus::File'/>
<ovr f='include/taglib/oggflacfile.h' l='63' c='TagLib::Ogg::FLAC::File'/>
<ovr f='include/taglib/speexfile.h' l='55' c='TagLib::Ogg::Speex::File'/>
<ovr f='include/taglib/vorbisfile.h' l='62' c='TagLib::Vorbis::File'/>
<size>24</size>
<doc f='include/taglib/oggfile.h' l='43'>/*!
     * This is an implementation of Ogg file page and packet rendering and is of
     * use to Ogg based formats.  While the API is small this handles the
     * non-trivial details of breaking up an Ogg stream into packets and makes
     * these available (via subclassing) to the codec meta data implementations.
     */</doc>
<fun r='_ZN6TagLib3Ogg4FileD1Ev'/>
<fun r='_ZN6TagLib3Ogg4File6packetEj'/>
<fun r='_ZN6TagLib3Ogg4File9setPacketEjRKNS_10ByteVectorE'/>
<fun r='_ZN6TagLib3Ogg4File15firstPageHeaderEv'/>
<fun r='_ZN6TagLib3Ogg4File14lastPageHeaderEv'/>
<fun r='_ZN6TagLib3Ogg4File4saveEv'/>
<fun r='_ZN6TagLib3Ogg4FileC1EPKc'/>
<fun r='_ZN6TagLib3Ogg4FileC1EPNS_8IOStreamE'/>
<fun r='_ZN6TagLib3Ogg4FileC1ERKS1_'/>
<fun r='_ZN6TagLib3Ogg4FileaSERKS1_'/>
<fun r='_ZN6TagLib3Ogg4File8nextPageEv'/>
<fun r='_ZN6TagLib3Ogg4File14writePageGroupERKNS_4ListIiEE'/>
<mbr r='TagLib::Ogg::File::d' o='128' t='TagLib::Ogg::File::FilePrivate *'/>
