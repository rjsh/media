<dec f='vlc/include/vlc_network.h' l='268' type='int vlc_getaddrinfo(const char * , unsigned int , const struct addrinfo * , struct addrinfo ** )'/>
<use f='vlc/modules/stream_out/standard.c' l='169' u='c' c='create_SDP'/>
<use f='vlc/modules/stream_out/standard.c' l='175' u='c' c='create_SDP'/>
<def f='vlc/src/network/getaddrinfo.c' l='82' type='int vlc_getaddrinfo(const char * node, unsigned int port, const struct addrinfo * hints, struct addrinfo ** res)'/>
<doc f='vlc/src/network/getaddrinfo.c' l='71'>/**
 * Resolves a host name to a list of socket addresses (like getaddrinfo()).
 *
 * @param node host name to resolve (encoded as UTF-8), or NULL
 * @param i_port port number for the socket addresses
 * @param p_hints parameters (see getaddrinfo() manual page)
 * @param res pointer set to the resulting chained list.
 * @return 0 on success, a getaddrinfo() error otherwise.
 * On failure, *res is undefined. On success, it must be freed with
 * freeaddrinfo().
 */</doc>
<use f='vlc/src/network/io.c' l='142' u='c' c='net_Listen'/>
<use f='vlc/src/network/tcp.c' l='137' u='c' c='net_Connect'/>
<use f='vlc/src/network/tcp.c' l='455' u='c' c='SocksHandshakeTCP'/>
<use f='vlc/src/network/udp.c' l='139' u='c' c='net_ListenSingle'/>
<use f='vlc/src/network/udp.c' l='512' u='c' c='net_ConnectDgram'/>
<use f='vlc/src/network/udp.c' l='596' u='c' c='net_OpenDgram'/>
<use f='vlc/src/network/udp.c' l='605' u='c' c='net_OpenDgram'/>
<use f='vlc/src/stream_output/announce.c' l='71' u='c' c='sout_AnnounceRegisterSDP'/>
