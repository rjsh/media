<dec f='vlc/modules/visualization/visual/fft.h' l='52' type='void fft_perform(const sound_sample * input, float * output, fft_state * state)'/>
<use f='vlc/modules/visualization/glspectrum.c' l='506' u='c' c='Thread'/>
<use f='vlc/modules/visualization/visual/effects.c' l='215' u='c' c='spectrum_Run'/>
<use f='vlc/modules/visualization/visual/effects.c' l='562' u='c' c='spectrometer_Run'/>
<def f='vlc/modules/visualization/visual/fft.c' l='90' type='void fft_perform(const sound_sample * input, float * output, fft_state * state)'/>
<doc f='vlc/modules/visualization/visual/fft.c' l='81'>/*
 * Do all the steps of the FFT, taking as input sound data (as described in
 * sound.h) and returning the intensities of each frequency as floats in the
 * range 0 to ((FFT_BUFFER_SIZE / 2) * 32768) ^ 2
 *
 * The input array is assumed to have FFT_BUFFER_SIZE elements,
 * and the output array is assumed to have (FFT_BUFFER_SIZE / 2 + 1) elements.
 * state is a (non-NULL) pointer returned by visual_fft_init.
 */</doc>
