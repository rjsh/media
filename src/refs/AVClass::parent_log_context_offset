<dec f='ffmpeg/libavutil/log.h' l='108' type='int'/>
<offset>256</offset>
<doc f='ffmpeg/libavutil/log.h' l='101'>/**
     * Offset in the structure where a pointer to the parent context for
     * logging is stored. For example a decoder could pass its AVCodecContext
     * to eval as such a parent context, which an av_log() implementation
     * could then leverage to display the parent context.
     * The offset can be NULL.
     */</doc>
<use f='ffmpeg/libavfilter/framesync.c' l='40' u='w'/>
<use f='ffmpeg/libavutil/imgutils.c' l='248' u='w'/>
<use f='ffmpeg/libavutil/log.c' l='259' u='r' c='format_line'/>
<use f='ffmpeg/libavutil/log.c' l='261' u='r' c='format_line'/>
<use f='ffmpeg/libswresample/options.c' l='140' u='w'/>
<dec f='include/libavutil/log.h' l='74' type='int'/>
<offset>256</offset>
<doc f='include/libavutil/log.h' l='67'>/**
     * Offset in the structure where a pointer to the parent context for
     * logging is stored. For example a decoder could pass its AVCodecContext
     * to eval as such a parent context, which an av_log() implementation
     * could then leverage to display the parent context.
     * The offset can be NULL.
     */</doc>
