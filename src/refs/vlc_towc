<dec f='vlc/src/libvlc.h' l='37' type='size_t vlc_towc(const char * str, uint32_t *restrict pwc)'/>
<use f='vlc/src/config/help.c' l='275' u='c' c='print_desc'/>
<use f='vlc/src/config/help.c' l='330' u='c' c='vlc_swidth'/>
<use f='vlc/src/config/keys.c' l='209' u='c' c='vlc_str2keycode'/>
<use f='vlc/src/text/strings.c' l='300' u='c' c='convert_xml_special_chars'/>
<def f='vlc/src/text/unicode.c' l='122' type='size_t vlc_towc(const char * str, uint32_t *restrict pwc)'/>
<use f='vlc/src/text/unicode.c' l='219' u='c' c='vlc_strcasestr'/>
<use f='vlc/src/text/unicode.c' l='226' u='c' c='vlc_strcasestr'/>
<use f='vlc/src/text/unicode.c' l='232' u='c' c='vlc_strcasestr'/>
<use f='vlc/src/text/unicode.c' l='253' u='c' c='EnsureUTF8'/>
<use f='vlc/src/text/unicode.c' l='277' u='c' c='IsUTF8'/>
<doc f='vlc/src/text/unicode.c' l='114'>/**
 * Converts the first character from a UTF-8 sequence into a code point.
 *
 * @param str an UTF-8 bytes sequence
 * @return 0 if str points to an empty string, i.e. the first character is NUL;
 * number of bytes that the first character occupies (from 1 to 4) otherwise;
 * -1 if the byte sequence was not a valid UTF-8 sequence.
 */</doc>
