<def f='include/taglib/tstring.h' l='78'/>
<size>16</size>
<doc f='include/taglib/tstring.h' l='63'>/*!
   * This is an implicitly shared \e wide string.  For storage it uses
   * TagLib::wstring, but as this is an &lt;i&gt;implementation detail&lt;/i&gt; this of
   * course could change.  Strings are stored internally as UTF-16(without BOM/
   * CPU byte order)
   *
   * The use of implicit sharing means that copying a string is cheap, the only
   * \e cost comes into play when the copy is modified.  Prior to that the string
   * just has a pointer to the data of the \e parent String.  This also makes
   * this class suitable as a function return type.
   *
   * In addition to adding implicit sharing, this class keeps track of four
   * possible encodings, which are the four supported by the ID3v2 standard.
   */</doc>
<fun r='_ZN6TagLib6StringC1Ev'/>
<fun r='_ZN6TagLib6StringC1ERKS0_'/>
<fun r='_ZN6TagLib6StringC1ERKSsNS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1ERKSbIwSt11char_traitsIwESaIwEENS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1EPKwNS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1EcNS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1EwNS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1EPKcNS0_4TypeE'/>
<fun r='_ZN6TagLib6StringC1ERKNS_10ByteVectorENS0_4TypeE'/>
<fun r='_ZN6TagLib6StringD1Ev'/>
<fun r='_ZNK6TagLib6String6to8BitEb'/>
<fun r='_ZNK6TagLib6String9toWStringEv'/>
<fun r='_ZNK6TagLib6String9toCStringEb'/>
<fun r='_ZNK6TagLib6String10toCWStringEv'/>
<fun r='_ZN6TagLib6String5beginEv'/>
<fun r='_ZNK6TagLib6String5beginEv'/>
<fun r='_ZN6TagLib6String3endEv'/>
<fun r='_ZNK6TagLib6String3endEv'/>
<fun r='_ZNK6TagLib6String4findERKS0_i'/>
<fun r='_ZNK6TagLib6String5rfindERKS0_i'/>
<fun r='_ZNK6TagLib6String5splitERKS0_'/>
<fun r='_ZNK6TagLib6String10startsWithERKS0_'/>
<fun r='_ZNK6TagLib6String6substrEjj'/>
<fun r='_ZN6TagLib6String6appendERKS0_'/>
<fun r='_ZNK6TagLib6String5upperEv'/>
<fun r='_ZNK6TagLib6String4sizeEv'/>
<fun r='_ZNK6TagLib6String6lengthEv'/>
<fun r='_ZNK6TagLib6String7isEmptyEv'/>
<fun r='_ZNK6TagLib6String6isNullEv'/>
<fun r='_ZNK6TagLib6String4dataENS0_4TypeE'/>
<fun r='_ZNK6TagLib6String5toIntEv'/>
<fun r='_ZNK6TagLib6String5toIntEPb'/>
<fun r='_ZNK6TagLib6String15stripWhiteSpaceEv'/>
<fun r='_ZNK6TagLib6String8isLatin1Ev'/>
<fun r='_ZNK6TagLib6String7isAsciiEv'/>
<fun r='_ZN6TagLib6String6numberEi'/>
<fun r='_ZN6TagLib6StringixEi'/>
<fun r='_ZNK6TagLib6StringixEi'/>
<fun r='_ZNK6TagLib6StringeqERKS0_'/>
<fun r='_ZNK6TagLib6StringneERKS0_'/>
<fun r='_ZN6TagLib6StringpLERKS0_'/>
<fun r='_ZN6TagLib6StringpLEPKw'/>
<fun r='_ZN6TagLib6StringpLEPKc'/>
<fun r='_ZN6TagLib6StringpLEw'/>
<fun r='_ZN6TagLib6StringpLEc'/>
<fun r='_ZN6TagLib6StringaSERKS0_'/>
<fun r='_ZN6TagLib6StringaSERKSs'/>
<fun r='_ZN6TagLib6StringaSERKSbIwSt11char_traitsIwESaIwEE'/>
<fun r='_ZN6TagLib6StringaSEPKw'/>
<fun r='_ZN6TagLib6StringaSEc'/>
<fun r='_ZN6TagLib6StringaSEw'/>
<fun r='_ZN6TagLib6StringaSEPKc'/>
<fun r='_ZN6TagLib6StringaSERKNS_10ByteVectorE'/>
<fun r='_ZNK6TagLib6StringltERKS0_'/>
<smbr r='_ZN6TagLib6String4nullE' t='TagLib::String'/>
<fun r='_ZN6TagLib6String6detachEv'/>
<fun r='_ZN6TagLib6String14copyFromLatin1EPKcm'/>
<fun r='_ZN6TagLib6String12copyFromUTF8EPKcm'/>
<fun r='_ZN6TagLib6String13copyFromUTF16EPKwmNS0_4TypeE'/>
<fun r='_ZN6TagLib6String13copyFromUTF16EPKcmNS0_4TypeE'/>
<smbr r='_ZN6TagLib6String14WCharByteOrderE' t='const TagLib::String::Type'/>
<mbr r='TagLib::String::d' o='64' t='TagLib::String::StringPrivate *'/>
