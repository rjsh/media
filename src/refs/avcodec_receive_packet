<dec f='ffmpeg/libavcodec/avcodec.h' l='4966' type='int avcodec_receive_packet(AVCodecContext * avctx, AVPacket * avpkt)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='4951'>/**
 * Read encoded data from the encoder.
 *
 * @param avctx codec context
 * @param avpkt This will be set to a reference-counted packet allocated by the
 *              encoder. Note that the function will always call
 *              av_frame_unref(frame) before doing anything else.
 * @return 0 on success, otherwise negative error code:
 *      AVERROR(EAGAIN):   output is not available right now - user must try
 *                         to send input
 *      AVERROR_EOF:       the encoder has been fully flushed, and there will be
 *                         no more output packets
 *      AVERROR(EINVAL):   codec not opened, or it is an encoder
 *      other errors: legitimate decoding errors
 */</doc>
<use f='ffmpeg/ffmpeg.c' l='893' u='c' c='do_audio_out'/>
<use f='ffmpeg/ffmpeg.c' l='1255' u='c' c='do_video_out'/>
<use f='ffmpeg/ffmpeg.c' l='1829' u='c' c='flush_encoders'/>
<def f='ffmpeg/libavcodec/utils.c' l='2991' type='int avcodec_receive_packet(AVCodecContext * avctx, AVPacket * avpkt)'/>
