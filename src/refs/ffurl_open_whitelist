<dec f='ffmpeg/libavformat/url.h' l='144' type='int ffurl_open_whitelist(URLContext ** puc, const char * filename, int flags, const AVIOInterruptCB * int_cb, AVDictionary ** options, const char * whitelist, const char * blacklist, URLContext * parent)'/>
<doc f='ffmpeg/libavformat/url.h' l='126'>/**
 * Create an URLContext for accessing to the resource indicated by
 * url, and open it.
 *
 * @param puc pointer to the location where, in case of success, the
 * function puts the pointer to the created URLContext
 * @param flags flags which control how the resource indicated by url
 * is to be opened
 * @param int_cb interrupt callback to use for the URLContext, may be
 * NULL
 * @param options  A dictionary filled with protocol-private options. On return
 * this parameter will be destroyed and replaced with a dict containing options
 * that were not found. May be NULL.
 * @param parent An enclosing URLContext, whose generic options should
 *               be applied to this URLContext as well.
 * @return &gt;= 0 in case of success, a negative value corresponding to an
 * AVERROR code in case of failure
 */</doc>
<use f='ffmpeg/libavformat/async.c' l='254' u='c' c='async_open'/>
<def f='ffmpeg/libavformat/avio.c' l='309' type='int ffurl_open_whitelist(URLContext ** puc, const char * filename, int flags, const AVIOInterruptCB * int_cb, AVDictionary ** options, const char * whitelist, const char * blacklist, URLContext * parent)'/>
<use f='ffmpeg/libavformat/avio.c' l='360' u='c' c='ffurl_open'/>
<use f='ffmpeg/libavformat/aviobuf.c' l='1046' u='c' c='ffio_open_whitelist'/>
<use f='ffmpeg/libavformat/cache.c' l='89' u='c' c='cache_open'/>
<use f='ffmpeg/libavformat/concat.c' l='100' u='c' c='concat_open'/>
<use f='ffmpeg/libavformat/crypto.c' l='145' u='c' c='crypto_open2'/>
<use f='ffmpeg/libavformat/ftp.c' l='544' u='c' c='ftp_connect_control_connection'/>
<use f='ffmpeg/libavformat/ftp.c' l='598' u='c' c='ftp_connect_data_connection'/>
<use f='ffmpeg/libavformat/gopher.c' l='96' u='c' c='gopher_open'/>
<use f='ffmpeg/libavformat/hlsproto.c' l='308' u='c' c='hls_read'/>
<use f='ffmpeg/libavformat/http.c' l='227' u='c' c='http_open_cnx_internal'/>
<use f='ffmpeg/libavformat/http.c' l='466' u='c' c='http_listen'/>
<use f='ffmpeg/libavformat/http.c' l='1599' u='c' c='http_proxy_open'/>
<use f='ffmpeg/libavformat/icecast.c' l='167' u='c' c='icecast_open'/>
<use f='ffmpeg/libavformat/md5proto.c' l='72' u='c' c='md5_close'/>
<use f='ffmpeg/libavformat/mmst.c' l='531' u='c' c='mms_open'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1150' u='c' c='rtmp_calc_swfhash'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='2680' u='c' c='rtmp_open'/>
<use f='ffmpeg/libavformat/rtpproto.c' l='384' u='c' c='rtp_open'/>
<use f='ffmpeg/libavformat/rtpproto.c' l='398' u='c' c='rtp_open'/>
<use f='ffmpeg/libavformat/rtpproto.c' l='409' u='c' c='rtp_open'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1478' u='c' c='ff_rtsp_make_setup_request'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1621' u='c' c='ff_rtsp_make_setup_request'/>
<use f='ffmpeg/libavformat/rtsp.c' l='1818' u='c' c='ff_rtsp_connect'/>
<use f='ffmpeg/libavformat/rtsp.c' l='2334' u='c' c='sdp_read_header'/>
<use f='ffmpeg/libavformat/rtsp.c' l='2404' u='c' c='rtp_read_header'/>
<use f='ffmpeg/libavformat/rtspdec.c' l='297' u='c' c='rtsp_read_setup'/>
<use f='ffmpeg/libavformat/rtspdec.c' l='666' u='c' c='rtsp_listen'/>
<use f='ffmpeg/libavformat/sapdec.c' l='88' u='c' c='sap_read_header'/>
<use f='ffmpeg/libavformat/sapenc.c' l='152' u='c' c='sap_write_header'/>
<use f='ffmpeg/libavformat/sapenc.c' l='172' u='c' c='sap_write_header'/>
<use f='ffmpeg/libavformat/smoothstreamingenc.c' l='125' u='c' c='ism_seek'/>
<use f='ffmpeg/libavformat/smoothstreamingenc.c' l='134' u='c' c='ism_seek'/>
<use f='ffmpeg/libavformat/smoothstreamingenc.c' l='529' u='c' c='ism_flush'/>
<use f='ffmpeg/libavformat/srtpproto.c' l='83' u='c' c='srtp_open'/>
<use f='ffmpeg/libavformat/subfile.c' l='80' u='c' c='subfile_open'/>
<use f='ffmpeg/libavformat/teeproto.c' l='114' u='c' c='tee_open'/>
