<def f='vlc/lib/event_internal.h' l='79'/>
<size>32</size>
<doc f='vlc/lib/event_internal.h' l='43'>/* Example usage
 *
 * struct libvlc_cool_object_t
 * {
 *        ...
 *        libvlc_event_manager_t * p_event_manager;
 *        ...
 * }
 *
 * libvlc_my_cool_object_new()
 * {
 *        ...
 *        p_self-&gt;p_event_manager = libvlc_event_manager_new( p_self,
 *                                                   p_self-&gt;p_libvlc_instance, p_e);
 *        libvlc_event_manager_register_event_type(p_self-&gt;p_event_manager,
 *                libvlc_MyCoolObjectDidSomething, p_e)
 *        ...
 * }
 *
 * libvlc_my_cool_object_release()
 * {
 *         ...
 *         libvlc_event_manager_release( p_self-&gt;p_event_manager );
 *         ...
 * }
 *
 * libvlc_my_cool_object_do_something()
 * {
 *        ...
 *        libvlc_event_t event;
 *        event.type = libvlc_MyCoolObjectDidSomething;
 *        event.u.my_cool_object_did_something.what_it_did = kSomething;
 *        libvlc_event_send( p_self-&gt;p_event_manager, &amp;event );
 * }
 * */</doc>
<mbr r='libvlc_event_listener_t::event_type' o='0' t='libvlc_event_type_t'/>
<mbr r='libvlc_event_listener_t::p_user_data' o='64' t='void *'/>
<mbr r='libvlc_event_listener_t::pf_callback' o='128' t='libvlc_callback_t'/>
<mbr r='libvlc_event_listener_t::is_asynchronous' o='192' t='_Bool'/>
