<dec f='ffmpeg/libavutil/mem.h' l='503' type='void av_memcpy_backptr(uint8_t * dst, int back, int cnt)'/>
<doc f='ffmpeg/libavutil/mem.h' l='492'>/**
 * Overlapping memcpy() implementation.
 *
 * @param dst  Destination buffer
 * @param back Number of bytes back to start copying (i.e. the initial size of
 *             the overlapping window); must be &gt; 0
 * @param cnt  Number of bytes to copy; must be &gt;= 0
 *
 * @note `cnt &gt; back` is valid, this will copy the bytes we just copied,
 *       thus creating a repeating pattern with a period length of `back`.
 */</doc>
<use f='ffmpeg/libavcodec/dfa.c' l='95' u='c' c='decode_tsw1'/>
<use f='ffmpeg/libavcodec/dfa.c' l='130' u='c' c='decode_dsw1'/>
<use f='ffmpeg/libavcodec/eatgv.c' l='136' u='c' c='unpack'/>
<use f='ffmpeg/libavcodec/g723_1dec.c' l='487' u='c' c='residual_interp'/>
<use f='ffmpeg/libavcodec/kgv1dec.c' l='144' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/lcldec.c' l='96' u='c' c='mszh_decomp'/>
<use f='ffmpeg/libavcodec/lzf.c' l='80' u='c' c='ff_lzf_uncompress'/>
<use f='ffmpeg/libavcodec/wmavoice.c' l='1383' u='c' c='synth_block_fcb_acb'/>
<use f='ffmpeg/libavcodec/xan.c' l='193' u='c' c='xan_unpack'/>
<use f='ffmpeg/libavcodec/xxan.c' l='166' u='c' c='xan_unpack'/>
<use f='ffmpeg/libavutil/lzo.c' l='130' u='c' c='copy_backptr'/>
<def f='ffmpeg/libavutil/mem.c' l='430' type='void av_memcpy_backptr(uint8_t * dst, int back, int cnt)'/>
<dec f='include/libavutil/mem.h' l='177' type='void av_memcpy_backptr(uint8_t * dst, int back, int cnt)'/>
<doc f='include/libavutil/mem.h' l='168'>/**
 * @brief deliberately overlapping memcpy implementation
 * @param dst destination buffer
 * @param back how many bytes back we start (the initial size of the overlapping window)
 * @param cnt number of bytes to copy, must be &gt;= 0
 *
 * cnt &gt; back is valid, this will copy the bytes we just copied,
 * thus creating a repeating pattern with a period length of back.
 */</doc>
