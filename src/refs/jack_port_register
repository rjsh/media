<dec f='include/jack/jack.h' l='588' type='jack_port_t * jack_port_register(jack_client_t * client, const char * port_name, const char * port_type, unsigned long flags, unsigned long buffer_size)'/>
<use f='vlc/modules/access/jack.c' l='200' u='c' c='Open'/>
<doc f='include/jack/jack.h' l='559'>/**
 * Create a new port for the client. This is an object used for moving
 * data of any type in or out of the client.  Ports may be connected
 * in various ways.
 *
 * Each port has a short name.  The port&apos;s full name contains the name
 * of the client concatenated with a colon (:) followed by its short
 * name.  The jack_port_name_size() is the maximum length of this full
 * name.  Exceeding that will cause the port registration to fail and
 * return NULL.
 *
 * The @a port_name must be unique among all ports owned by this client. 
 * If the name is not unique, the registration will fail. 
 *
 * All ports have a type, which may be any non-NULL and non-zero
 * length string, passed as an argument.  Some port types are built
 * into the JACK API, like JACK_DEFAULT_AUDIO_TYPE or JACK_DEFAULT_MIDI_TYPE
 *
 * @param client pointer to JACK client structure.
 * @param port_name non-empty short name for the new port (not
 * including the leading @a &quot;client_name:&quot;). Must be unique.
 * @param port_type port type name.  If longer than
 * jack_port_type_size(), only that many characters are significant.
 * @param flags @ref JackPortFlags bit mask.
 * @param buffer_size must be non-zero if this is not a built-in @a
 * port_type.  Otherwise, it is ignored.
 *
 * @return jack_port_t pointer on success, otherwise NULL.
 */</doc>
<use f='vlc/modules/audio_output/jack.c' l='188' u='c' c='Start'/>
