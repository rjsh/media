<def f='include/dvbpsi/descriptor.h' l='78'/>
<size>32</size>
<doc f='include/dvbpsi/descriptor.h' l='61'>/*!
 * \typedef struct dvbpsi_descriptor_s dvbpsi_descriptor_t
 * \brief dvbpsi_descriptor_t type definition.
 *
 * The common descriptor header and its payload is contained in this
 * structure. The payload is the raw descriptor data and its interpretation
 * depends on the the p_descriptor::i_tag value.
 *
 * After passing the descriptor to a dvbpsi_DecodeXXXXDr function the raw
 * descriptor data is interpreted and decoded into a descriptor specific
 * structure. This structure is stored in the p_descriptor::p_decoded member
 * by the dvbpsi_DecodeXXXXDr function.
 *
 * NOTE: It is mandatory to add a decoded descriptor to the &apos;p_decoded&apos; member
 * of this struct. Failing to do so will result in memory leakage when
 * deleting descriptor with @see dvbpsi_DeleteDescriptor.
 */</doc>
<mbr r='dvbpsi_descriptor_s::i_tag' o='0' t='uint8_t'/>
<mbr r='dvbpsi_descriptor_s::i_length' o='8' t='uint8_t'/>
<mbr r='dvbpsi_descriptor_s::p_data' o='64' t='uint8_t *'/>
<mbr r='dvbpsi_descriptor_s::p_next' o='128' t='struct dvbpsi_descriptor_s *'/>
<mbr r='dvbpsi_descriptor_s::p_decoded' o='192' t='void *'/>
