<dec f='ffmpeg/libavutil/pixelutils.h' l='49' type='av_pixelutils_sad_fn av_pixelutils_get_sad_fn(int w_bits, int h_bits, int aligned, void * log_ctx)'/>
<use f='ffmpeg/libavfilter/f_select.c' l='242' u='c' c='config_input'/>
<doc f='ffmpeg/libavutil/pixelutils.h' l='32'>/**
 * Get a potentially optimized pointer to a Sum-of-absolute-differences
 * function (see the av_pixelutils_sad_fn prototype).
 *
 * @param w_bits  1&lt;&lt;w_bits is the requested width of the block size
 * @param h_bits  1&lt;&lt;h_bits is the requested height of the block size
 * @param aligned If set to 2, the returned sad function will assume src1 and
 *                src2 addresses are aligned on the block size.
 *                If set to 1, the returned sad function will assume src1 is
 *                aligned on the block size.
 *                If set to 0, the returned sad function assume no particular
 *                alignment.
 * @param log_ctx context used for logging, can be NULL
 *
 * @return a pointer to the SAD function or NULL in case of error (because of
 *         invalid parameters)
 */</doc>
<use f='ffmpeg/libavfilter/vf_deshake.c' l='347' u='c' c='init'/>
<use f='ffmpeg/libavfilter/vf_framerate.c' l='572' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_minterpolate.c' l='373' u='c' c='config_input'/>
<use f='ffmpeg/libavfilter/vf_mpdecimate.c' l='148' u='c' c='init'/>
<def f='ffmpeg/libavutil/pixelutils.c' l='64' type='av_pixelutils_sad_fn av_pixelutils_get_sad_fn(int w_bits, int h_bits, int aligned, void * log_ctx)'/>
