<dec f='vlc/include/vlc_input_item.h' l='132' type='void input_item_PostSubItem(input_item_t * p_parent, input_item_t * p_child)'/>
<use f='vlc/modules/access/mms/mmsh.c' l='168' u='c' c='MMSHOpen'/>
<use f='vlc/modules/demux/playlist/ifo.c' l='108' u='c' c='Demux'/>
<use f='vlc/modules/demux/playlist/ifo.c' l='131' u='c' c='DemuxDVD_VR'/>
<use f='vlc/modules/demux/playlist/sgimb.c' l='401' u='c' c='Demux'/>
<def f='vlc/src/input/item.c' l='183' type='void input_item_PostSubItem(input_item_t * p_parent, input_item_t * p_child)'/>
<doc f='vlc/src/input/item.c' l='179'>/* This won&apos;t hold the item, but can tell to interested third parties
 * Like the playlist, that there is a new sub item. With this design
 * It is not the input item&apos;s responsability to keep all the ref of
 * the input item children. */</doc>
