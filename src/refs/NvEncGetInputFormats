<dec f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='1933' type='NVENCSTATUS NvEncGetInputFormats(void * encoder, GUID encodeGUID, NV_ENC_BUFFER_FORMAT * inputFmts, uint32_t inputFmtArraySize, uint32_t * inputFmtCount)'/>
<doc f='ffmpeg/compat/nvenc/nvEncodeAPI.h' l='1903'>/**
 * \brief Retrieves an array of supported Input formats
 *
 * Returns an array of supported input formats  The client must use the input
 * format to create input surface using ::NvEncCreateInputBuffer() API.
 *
 * \param [in] encoder
 *   Pointer to the NvEncodeAPI interface.
 * \param [in] encodeGUID
 *   Encode GUID, corresponding to which the number of supported input formats
 *   is to be retrieved.
 *\param [in] inputFmtArraySize
 *   Size input format count array passed in \p inputFmts.
 *\param [out] inputFmts
 *   Array of input formats supported for this Encode GUID.
 *\param [out] inputFmtCount
 *   The number of valid input format types returned by the NvEncodeAPI
 *   interface in \p inputFmts array.
 *
 * \return
 * ::NV_ENC_SUCCESS \n
 * ::NV_ENC_ERR_INVALID_PTR \n
 * ::NV_ENC_ERR_INVALID_ENCODERDEVICE \n
 * ::NV_ENC_ERR_DEVICE_NOT_EXIST \n
 * ::NV_ENC_ERR_UNSUPPORTED_PARAM \n
 * ::NV_ENC_ERR_OUT_OF_MEMORY \n
 * ::NV_ENC_ERR_INVALID_PARAM \n
 * ::NV_ENC_ERR_GENERIC \n
 *
 */</doc>
