<dec f='ffmpeg/libavformat/avformat.h' l='2837' type='int avformat_query_codec(const AVOutputFormat * ofmt, enum AVCodecID codec_id, int std_compliance)'/>
<doc f='ffmpeg/libavformat/avformat.h' l='2827'>/**
 * Test if the given container can store a codec.
 *
 * @param ofmt           container to check for compatibility
 * @param codec_id       codec to potentially store in container
 * @param std_compliance standards compliance level, one of FF_COMPLIANCE_*
 *
 * @return 1 if codec with ID codec_id can be stored in ofmt, 0 if it cannot.
 *         A negative number if this information is not available.
 */</doc>
<use f='ffmpeg/ffmpeg_opt.c' l='2140' u='c' c='open_output_file'/>
<def f='ffmpeg/libavformat/utils.c' l='4653' type='int avformat_query_codec(const AVOutputFormat * ofmt, enum AVCodecID codec_id, int std_compliance)'/>
<dec f='include/libavformat/avformat.h' l='1719' type='int avformat_query_codec(AVOutputFormat * ofmt, enum AVCodecID codec_id, int std_compliance)'/>
<doc f='include/libavformat/avformat.h' l='1711'>/**
 * Test if the given container can store a codec.
 *
 * @param std_compliance standards compliance level, one of FF_COMPLIANCE_*
 *
 * @return 1 if codec with ID codec_id can be stored in ofmt, 0 if it cannot.
 *         A negative number if this information is not available.
 */</doc>
