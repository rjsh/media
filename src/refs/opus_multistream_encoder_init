<dec f='include/opus/opus_multistream.h' l='326' type='int opus_multistream_encoder_init(OpusMSEncoder * st, opus_int32 Fs, int channels, int streams, int coupled_streams, const unsigned char * mapping, int application)'/>
<doc f='include/opus/opus_multistream.h' l='278'>/** Initialize a previously allocated multistream encoder state.
  * The memory pointed to by \a st must be at least the size returned by
  * opus_multistream_encoder_get_size().
  * This is intended for applications which use their own allocator instead of
  * malloc.
  * To reset a previously initialized state, use the #OPUS_RESET_STATE CTL.
  * @see opus_multistream_encoder_create
  * @see opus_multistream_encoder_get_size
  * @param st &lt;tt&gt;OpusMSEncoder*&lt;/tt&gt;: Multistream encoder state to initialize.
  * @param Fs &lt;tt&gt;opus_int32&lt;/tt&gt;: Sampling rate of the input signal (in Hz).
  *                                This must be one of 8000, 12000, 16000,
  *                                24000, or 48000.
  * @param channels &lt;tt&gt;int&lt;/tt&gt;: Number of channels in the input signal.
  *                               This must be at most 255.
  *                               It may be greater than the number of
  *                               coded channels (&lt;code&gt;streams +
  *                               coupled_streams&lt;/code&gt;).
  * @param streams &lt;tt&gt;int&lt;/tt&gt;: The total number of streams to encode from the
  *                              input.
  *                              This must be no more than the number of channels.
  * @param coupled_streams &lt;tt&gt;int&lt;/tt&gt;: Number of coupled (2 channel) streams
  *                                      to encode.
  *                                      This must be no larger than the total
  *                                      number of streams.
  *                                      Additionally, The total number of
  *                                      encoded channels (&lt;code&gt;streams +
  *                                      coupled_streams&lt;/code&gt;) must be no
  *                                      more than the number of input channels.
  * @param[in] mapping &lt;code&gt;const unsigned char[channels]&lt;/code&gt;: Mapping from
  *                    encoded channels to input channels, as described in
  *                    @ref opus_multistream. As an extra constraint, the
  *                    multistream encoder does not allow encoding coupled
  *                    streams for which one channel is unused since this
  *                    is never a good idea.
  * @param application &lt;tt&gt;int&lt;/tt&gt;: The target encoder application.
  *                                  This must be one of the following:
  * &lt;dl&gt;
  * &lt;dt&gt;#OPUS_APPLICATION_VOIP&lt;/dt&gt;
  * &lt;dd&gt;Process signal for improved speech intelligibility.&lt;/dd&gt;
  * &lt;dt&gt;#OPUS_APPLICATION_AUDIO&lt;/dt&gt;
  * &lt;dd&gt;Favor faithfulness to the original input.&lt;/dd&gt;
  * &lt;dt&gt;#OPUS_APPLICATION_RESTRICTED_LOWDELAY&lt;/dt&gt;
  * &lt;dd&gt;Configure the minimum possible coding delay by disabling certain modes
  * of operation.&lt;/dd&gt;
  * &lt;/dl&gt;
  * @returns #OPUS_OK on success, or an error code (see @ref opus_errorcodes)
  *          on failure.
  */</doc>
