<dec f='ffmpeg/libavutil/imgutils.h' l='149' type='int av_image_fill_arrays(uint8_t ** dst_data, int * dst_linesize, const uint8_t * src, enum AVPixelFormat pix_fmt, int width, int height, int align)'/>
<doc f='ffmpeg/libavutil/imgutils.h' l='123'>/**
 * Setup the data pointers and linesizes based on the specified image
 * parameters and the provided array.
 *
 * The fields of the given image are filled in by using the src
 * address which points to the image data buffer. Depending on the
 * specified pixel format, one or multiple image data pointers and
 * line sizes will be set.  If a planar format is specified, several
 * pointers will be set pointing to the different picture planes and
 * the line sizes of the different planes will be stored in the
 * lines_sizes array. Call with src == NULL to get the required
 * size for the src buffer.
 *
 * To allocate the buffer and fill in the dst_data and dst_linesize in
 * one call, use av_image_alloc().
 *
 * @param dst_data      data pointers to be filled in
 * @param dst_linesizes linesizes for the image in dst_data to be filled in
 * @param src           buffer which will contain or contains the actual image data, can be NULL
 * @param pix_fmt       the pixel format of the image
 * @param width         the width of the image in pixels
 * @param height        the height of the image in pixels
 * @param align         the value used in src for linesize alignment
 * @return the size in bytes required for src, a negative error code
 * in case of failure
 */</doc>
<use f='ffmpeg/libavcodec/avpicture.c' l='40' u='c' c='avpicture_fill'/>
<use f='ffmpeg/libavcodec/nuv.c' l='80' u='c' c='copy_frame'/>
<use f='ffmpeg/libavcodec/rawdec.c' l='359' u='c' c='raw_decode'/>
<def f='ffmpeg/libavutil/imgutils.c' l='341' type='int av_image_fill_arrays(uint8_t ** dst_data, int * dst_linesize, const uint8_t * src, enum AVPixelFormat pix_fmt, int width, int height, int align)'/>
<use f='ffmpeg/libavutil/imgutils.c' l='379' u='c' c='av_image_get_buffer_size'/>
