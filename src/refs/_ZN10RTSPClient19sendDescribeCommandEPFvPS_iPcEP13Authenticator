<dec f='include/liveMedia/RTSPClient.hh' l='68' type='unsigned int RTSPClient::sendDescribeCommand(responseHandler * responseHandler, Authenticator * authenticator = __null)'/>
<use f='vlc/modules/access/live555.cpp' l='540' u='c' c='_ZL20continueAfterOPTIONSP10RTSPClientiPc'/>
<doc f='include/liveMedia/RTSPClient.hh' l='52'>// A function that is called in response to a RTSP command.  The parameters are as follows:
      //     &quot;rtspClient&quot;: The &quot;RTSPClient&quot; object on which the original command was issued.
      //     &quot;resultCode&quot;: If zero, then the command completed successfully.  If non-zero, then the command did not complete
      //         successfully, and &quot;resultCode&quot; indicates the error, as follows:
      //             A positive &quot;resultCode&quot; is a RTSP error code (for example, 404 means &quot;not found&quot;)
      //             A negative &quot;resultCode&quot; indicates a socket/network error; 0-&quot;resultCode&quot; is the standard &quot;errno&quot; code.
      //     &quot;resultString&quot;: A (&apos;\0&apos;-terminated) string returned along with the response, or else NULL.
      //         In particular:
      //             &quot;resultString&quot; for a successful &quot;DESCRIBE&quot; command will be the media session&apos;s SDP description.
      //             &quot;resultString&quot; for a successful &quot;OPTIONS&quot; command will be a list of allowed commands.
      //         Note that this string can be present (i.e., not NULL) even if &quot;resultCode&quot; is non-zero - i.e., an error message.
      //         Also, &quot;resultString&quot; can be NULL, even if &quot;resultCode&quot; is zero (e.g., if the RTSP command succeeded, but without
      //             including an appropriate result header).
      //         Note also that this string is dynamically allocated, and must be freed by the handler (or the caller)
      //             - using &quot;delete[]&quot;.</doc>
