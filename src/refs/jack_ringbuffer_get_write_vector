<dec f='include/jack/ringbuffer.h' l='124' type='void jack_ringbuffer_get_write_vector(const jack_ringbuffer_t * rb, jack_ringbuffer_data_t * vec)'/>
<doc f='include/jack/ringbuffer.h' l='105'>/**
 * Fill a data structure with a description of the current writable
 * space in the ringbuffer.  The description is returned in a two
 * element array of jack_ringbuffer_data_t.  Two elements are needed
 * because the space available for writing may be split across the end
 * of the ringbuffer.
 *
 * The first element will always contain a valid @a len field, which
 * may be zero or greater.  If the @a len field is non-zero, then data
 * can be written in a contiguous fashion using the address given in
 * the corresponding @a buf field.
 *
 * If the second element has a non-zero @a len field, then a second
 * contiguous stretch of data can be written to the address given in
 * the corresponding @a buf field.
 *
 * @param rb a pointer to the ringbuffer structure.
 * @param vec a pointer to a 2 element array of jack_ringbuffer_data_t.
 */</doc>
