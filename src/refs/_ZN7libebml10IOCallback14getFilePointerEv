<dec f='include/ebml/IOCallback.h' l='77' type='uint64 libebml::IOCallback::getFilePointer()'/>
<doc f='include/ebml/IOCallback.h' l='72'>// Although the position is always positive, the return value of this callback is signed to
	// easily allow negative values for returning errors. When an error occurs, the implementor
	// should return -1 and the file pointer otherwise.
	//
	// If an error occurs, an exception should be thrown.</doc>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='669' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='679' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='692' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='699' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='719' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='726' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='733' u='c' c='_ZN18matroska_segment_c7PreloadEv'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='751' u='c' c='_ZN18matroska_segment_c16LoadSeekHeadItemERKN7libebml13EbmlCallbacksEl'/>
<use f='vlc/modules/demux/mkv/matroska_segment.cpp' l='892' u='c' c='_ZN18matroska_segment_c4SeekElll'/>
<ovr f='vlc/modules/demux/mkv/stream_io_callback.cpp' l='78' c='_ZN22vlc_stream_io_callback14getFilePointerEv'/>
