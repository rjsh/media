<dec f='ffmpeg/libavcodec/avcodec.h' l='4180' type='AVCodecContext * avcodec_alloc_context3(const AVCodec * codec)'/>
<doc f='ffmpeg/libavcodec/avcodec.h' l='4167'>/**
 * Allocate an AVCodecContext and set its fields to default values. The
 * resulting struct should be freed with avcodec_free_context().
 *
 * @param codec if non-NULL, allocate private data and initialize defaults
 *              for the given codec. It is illegal to then call avcodec_open2()
 *              with a different codec.
 *              If NULL, then the codec-specific defaults won&apos;t be initialized,
 *              which may result in suboptimal default settings (this is
 *              important mainly for encoders, e.g. libx264).
 *
 * @return An AVCodecContext filled with default values or NULL on failure.
 */</doc>
<use f='ffmpeg/libavfilter/src_movie.c' l='163' u='c' c='open_stream'/>
<use f='ffmpeg/ffmpeg.c' l='2927' u='c' c='init_output_stream_streamcopy'/>
<use f='ffmpeg/ffmpeg_opt.c' l='706' u='c' c='add_input_streams'/>
<use f='ffmpeg/ffmpeg_opt.c' l='1262' u='c' c='new_output_stream'/>
<use f='ffmpeg/ffprobe.c' l='2620' u='c' c='open_input_file'/>
<use f='ffmpeg/ffserver.c' l='3527' u='c' c='add_av_stream1'/>
<use f='ffmpeg/ffserver.c' l='3541' u='c' c='add_av_stream1'/>
<use f='ffmpeg/ffserver_config.c' l='813' u='c' c='ffserver_parse_config_stream'/>
<use f='ffmpeg/ffserver_config.c' l='814' u='c' c='ffserver_parse_config_stream'/>
<use f='ffmpeg/ffserver_config.c' l='1126' u='c' c='ffserver_parse_config_stream'/>
<use f='ffmpeg/ffserver_config.c' l='1133' u='c' c='ffserver_parse_config_stream'/>
<use f='ffmpeg/libavcodec/avdct.c' l='99' u='c' c='avcodec_dct_init'/>
<use f='ffmpeg/libavcodec/avrndec.c' l='56' u='c' c='init'/>
<use f='ffmpeg/libavcodec/frame_thread_encoder.c' l='193' u='c' c='ff_frame_thread_encoder_init'/>
<use f='ffmpeg/libavcodec/mpegvideo_enc.c' l='1413' u='c' c='estimate_best_b_count'/>
<def f='ffmpeg/libavcodec/options.c' l='156' type='AVCodecContext * avcodec_alloc_context3(const AVCodec * codec)'/>
<use f='ffmpeg/libavcodec/remove_extradata_bsf.c' l='76' u='c' c='remove_extradata_init'/>
<use f='ffmpeg/libavcodec/smvjpegdec.c' l='128' u='c' c='smvjpeg_decode_init'/>
<use f='ffmpeg/libavcodec/tdsc.c' l='121' u='c' c='tdsc_init'/>
<use f='ffmpeg/libavfilter/vf_mcdeint.c' l='115' u='c' c='config_props'/>
<use f='ffmpeg/libavfilter/vf_spp.c' l='462' u='c' c='init_dict'/>
<use f='ffmpeg/libavfilter/vf_subtitles.c' l='398' u='c' c='init_subtitles'/>
<use f='ffmpeg/libavfilter/vf_uspp.c' l='350' u='c' c='config_input'/>
<use f='ffmpeg/libavformat/concatdec.c' l='213' u='c' c='detect_stream_specific'/>
<use f='ffmpeg/libavformat/dump.c' l='418' u='c' c='dump_stream_format'/>
<use f='ffmpeg/libavformat/oggparseflac.c' l='97' u='c' c='old_flac_header'/>
<use f='ffmpeg/libavformat/utils.c' l='4217' u='c' c='avformat_new_stream'/>
<use f='ffmpeg/libavformat/utils.c' l='4234' u='c' c='avformat_new_stream'/>
<dec f='include/libavcodec/avcodec.h' l='3278' type='AVCodecContext * avcodec_alloc_context3(const AVCodec * codec)'/>
<doc f='include/libavcodec/avcodec.h' l='3263'>/**
 * Allocate an AVCodecContext and set its fields to default values.  The
 * resulting struct can be deallocated by calling avcodec_close() on it followed
 * by av_free().
 *
 * @param codec if non-NULL, allocate private data and initialize defaults
 *              for the given codec. It is illegal to then call avcodec_open2()
 *              with a different codec.
 *              If NULL, then the codec-specific defaults won&apos;t be initialized,
 *              which may result in suboptimal default settings (this is
 *              important mainly for encoders, e.g. libx264).
 *
 * @return An AVCodecContext filled with default values or NULL on failure.
 * @see avcodec_get_context_defaults
 */</doc>
<use f='vlc/modules/codec/avcodec/avcodec.c' l='298' u='c' c='OpenDecoder'/>
<use f='vlc/modules/codec/avcodec/encoder.c' l='356' u='c' c='OpenEncoder'/>
