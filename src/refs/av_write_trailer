<dec f='ffmpeg/libavformat/avformat.h' l='2562' type='int av_write_trailer(AVFormatContext * s)'/>
<doc f='ffmpeg/libavformat/avformat.h' l='2553'>/**
 * Write the stream trailer to an output media file and free the
 * file private data.
 *
 * May only be called after a successful call to avformat_write_header.
 *
 * @param s media file handle
 * @return 0 if OK, AVERROR_xxx on error
 */</doc>
<use f='ffmpeg/ffmpeg.c' l='4423' u='c' c='transcode'/>
<use f='ffmpeg/ffserver.c' l='931' u='c' c='close_connection'/>
<use f='ffmpeg/ffserver.c' l='944' u='c' c='close_connection'/>
<use f='ffmpeg/ffserver.c' l='2485' u='c' c='http_prepare_data'/>
<use f='ffmpeg/libavformat/dashenc.c' l='186' u='c' c='dash_free'/>
<use f='ffmpeg/libavformat/fifo.c' l='201' u='c' c='fifo_thread_write_trailer'/>
<use f='ffmpeg/libavformat/hdsenc.c' l='146' u='c' c='hds_free'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1050' u='c' c='hls_write_trailer'/>
<use f='ffmpeg/libavformat/hlsenc.c' l='1059' u='c' c='hls_write_trailer'/>
<use f='ffmpeg/libavformat/img2enc.c' l='167' u='c' c='write_packet'/>
<use f='ffmpeg/libavformat/movenchint.c' l='468' u='c' c='ff_mov_close_hinting'/>
<def f='ffmpeg/libavformat/mux.c' l='1287' type='int av_write_trailer(AVFormatContext * s)'/>
<use f='ffmpeg/libavformat/rtpenc_mpegts.c' l='36' u='c' c='rtp_mpegts_write_close'/>
<use f='ffmpeg/libavformat/rtpenc_mpegts.c' l='41' u='c' c='rtp_mpegts_write_close'/>
<use f='ffmpeg/libavformat/rtsp.c' l='738' u='c' c='ff_rtsp_undo_setup'/>
<use f='ffmpeg/libavformat/sapenc.c' l='51' u='c' c='sap_write_close'/>
<use f='ffmpeg/libavformat/segment.c' l='359' u='c' c='segment_end'/>
<use f='ffmpeg/libavformat/segment.c' l='953' u='c' c='seg_write_trailer'/>
<use f='ffmpeg/libavformat/smoothstreamingenc.c' l='183' u='c' c='ism_free'/>
<use f='ffmpeg/libavformat/tee.c' l='95' u='c' c='close_slave'/>
<dec f='include/libavformat/avformat.h' l='1500' type='int av_write_trailer(AVFormatContext * s)'/>
<doc f='include/libavformat/avformat.h' l='1491'>/**
 * Write the stream trailer to an output media file and free the
 * file private data.
 *
 * May only be called after a successful call to avformat_write_header.
 *
 * @param s media file handle
 * @return 0 if OK, AVERROR_xxx on error
 */</doc>
<use f='vlc/modules/demux/avformat/mux.c' l='158' u='c' c='CloseMux'/>
