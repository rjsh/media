<dec f='ffmpeg/libavformat/rtmppkt.h' l='150' type='int ff_rtmp_packet_write(URLContext * h, RTMPPacket * p, int chunk_size, RTMPPacket ** prev_pkt, int * nb_prev_pkt)'/>
<def f='ffmpeg/libavformat/rtmppkt.c' l='305' type='int ff_rtmp_packet_write(URLContext * h, RTMPPacket * pkt, int chunk_size, RTMPPacket ** prev_pkt_ptr, int * nb_prev_pkt)'/>
<doc f='ffmpeg/libavformat/rtmppkt.h' l='139'>/**
 * Send RTMP packet to the server.
 *
 * @param h          reader context
 * @param p          packet to send
 * @param chunk_size current chunk size
 * @param prev_pkt   previously sent packet headers for all channels
 *                   (may be used for packet header compressing)
 * @param nb_prev_pkt number of allocated elements in prev_pkt
 * @return number of bytes written on success, negative value otherwise
 */</doc>
<use f='ffmpeg/libavformat/rtmpproto.c' l='249' u='c' c='rtmp_send_packet'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='490' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='503' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='517' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='530' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='565' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='580' u='c' c='read_connect'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1534' u='c' c='handle_chunk_size'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1871' u='c' c='write_begin'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='1918' u='c' c='write_status'/>
<use f='ffmpeg/libavformat/rtmpproto.c' l='2019' u='c' c='send_invoke_response'/>
