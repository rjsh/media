<dec f='vlc/modules/video_filter/deinterlace/helpers.h' l='133' type='int EstimateNumBlocksWithMotion(const picture_t * p_prev, const picture_t * p_curr, int * pi_top, int * pi_bot)'/>
<use f='vlc/modules/video_filter/deinterlace/algo_ivtc.c' l='425' u='c' c='IVTCLowLevelDetect'/>
<doc f='vlc/modules/video_filter/deinterlace/helpers.h' l='102'>/**
 * Helper function: Estimates the number of 8x8 blocks which have motion
 * between the given pictures. Needed for various detectors in RenderIVTC().
 *
 * Number of planes and visible lines in each plane, in the inputs must match.
 * If the visible pitches do not match, only the compatible (smaller)
 * part will be tested.
 *
 * Note that the return value is NOT simply *pi_top + *pi_bot, because
 * the fields and the full block use different motion thresholds.
 *
 * If you do not want the separate field scores, pass NULL for pi_top and
 * pi_bot. This does not affect computation speed, and is only provided as
 * a syntactic convenience.
 *
 * Motion in each picture plane (Y, U, V) counts separately.
 * The sum of number of blocks with motion across all planes is returned.
 *
 * For 4:2:0 chroma, even-numbered chroma lines make up the &quot;top field&quot; for
 * chroma, and odd-numbered chroma lines the &quot;bottom field&quot; for chroma.
 * This is correct for IVTC purposes.
 *
 * @param[in] p_prev Previous picture
 * @param[in] p_curr Current picture
 * @param[out] pi_top Number of 8x8 blocks where top field has motion.
 * @param[out] pi_bot Number of 8x8 blocks where bottom field has motion.
 * @return Number of 8x8 blocks that have motion.
 * @retval -1 Error: incompatible input pictures.
 * @see TestForMotionInBlock()
 * @see RenderIVTC()
 */</doc>
<def f='vlc/modules/video_filter/deinterlace/helpers.c' l='382' type='int EstimateNumBlocksWithMotion(const picture_t * p_prev, const picture_t * p_curr, int * pi_top, int * pi_bot)'/>
<doc f='vlc/modules/video_filter/deinterlace/helpers.c' l='381'>/* See header for function doc. */</doc>
