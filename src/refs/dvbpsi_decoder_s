<def f='include/dvbpsi/dvbpsi.h' l='260'/>
<size>40</size>
<doc f='include/dvbpsi/dvbpsi.h' l='253'>/*!
 * \struct dvbpsi_decoder_s
 * \brief PSI decoder structure.
 *
 * This structure shouldn&apos;t be used but if you want to write an external
 * decoder.
 */</doc>
<mbr r='dvbpsi_decoder_s::i_magic' o='0' t='uint8_t [3]'/>
<mbr r='dvbpsi_decoder_s::b_complete_header' o='24' t='_Bool'/>
<mbr r='dvbpsi_decoder_s::b_discontinuity' o='32' t='_Bool'/>
<mbr r='dvbpsi_decoder_s::b_current_valid' o='40' t='_Bool'/>
<mbr r='dvbpsi_decoder_s::i_continuity_counter' o='48' t='uint8_t'/>
<mbr r='dvbpsi_decoder_s::i_last_section_number' o='56' t='uint8_t'/>
<mbr r='dvbpsi_decoder_s::p_current_section' o='64' t='dvbpsi_psi_section_t *'/>
<mbr r='dvbpsi_decoder_s::p_sections' o='128' t='dvbpsi_psi_section_t *'/>
<mbr r='dvbpsi_decoder_s::pf_gather' o='192' t='dvbpsi_callback_gather_t'/>
<mbr r='dvbpsi_decoder_s::i_section_max_size' o='256' t='int'/>
<mbr r='dvbpsi_decoder_s::i_need' o='288' t='int'/>
