<dec f='ffmpeg/libavutil/samplefmt.h' l='106' type='enum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt)'/>
<doc f='ffmpeg/libavutil/samplefmt.h' l='97'>/**
 * Get the packed alternative form of the given sample format.
 *
 * If the passed sample_fmt is already in packed format, the format returned is
 * the same as the input.
 *
 * @return  the packed alternative form of the given sample format or
            AV_SAMPLE_FMT_NONE on error.
 */</doc>
<use f='ffmpeg/libavfilter/af_volume.c' l='229' u='c' c='volume_init'/>
<use f='ffmpeg/libavfilter/af_volume.c' l='438' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='644' u='c' c='get_fmt_score'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='645' u='c' c='get_fmt_score'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='648' u='c' c='get_fmt_score'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='649' u='c' c='get_fmt_score'/>
<use f='ffmpeg/libavfilter/avfiltergraph.c' l='1055' u='c' c='swap_sample_fmts_on_filter'/>
<use f='ffmpeg/libavfilter/x86/af_volume_init.c' l='39' u='c' c='ff_volume_init_x86'/>
<def f='ffmpeg/libavutil/samplefmt.c' l='75' type='enum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt)'/>
<use f='ffmpeg/libswresample/audioconvert.c' l='151' u='c' c='swri_audio_convert_alloc'/>
<use f='ffmpeg/libswresample/audioconvert.c' l='151' u='c' c='swri_audio_convert_alloc'/>
<use f='ffmpeg/libswresample/dither.c' l='87' u='c' c='swri_dither_init'/>
<use f='ffmpeg/libswresample/dither.c' l='88' u='c' c='swri_dither_init'/>
<use f='ffmpeg/libswresample/rematrix.c' l='363' u='c' c='auto_matrix'/>
<use f='ffmpeg/libswresample/rematrix.c' l='364' u='c' c='auto_matrix'/>
<dec f='include/libavutil/samplefmt.h' l='87' type='enum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt)'/>
<doc f='include/libavutil/samplefmt.h' l='78'>/**
 * Get the packed alternative form of the given sample format.
 *
 * If the passed sample_fmt is already in packed format, the format returned is
 * the same as the input.
 *
 * @return  the packed alternative form of the given sample format or
            AV_SAMPLE_FMT_NONE on error.
 */</doc>
