<def f='vlc/lib/media_list_player.c' l='55'/>
<size>152</size>
<doc f='vlc/lib/media_list_player.c' l='43'>/* This is a very dummy implementation of playlist on top of
 * media_list and media_player.
 *
 * All this code is doing is simply computing the next item
 * of a tree of media_list (see get_next_index()), and play
 * the next item when the current is over. This is happening
 * via the event callback media_player_reached_end().
 *
 * This is thread safe, and we use a two keys (locks) scheme
 * to discriminate between callbacks and regular uses.
 */</doc>
<mbr r='libvlc_media_list_player_t::p_event_manager' o='0' t='libvlc_event_manager_t *'/>
<mbr r='libvlc_media_list_player_t::p_libvlc_instance' o='64' t='libvlc_instance_t *'/>
<mbr r='libvlc_media_list_player_t::i_refcount' o='128' t='int'/>
<mbr r='libvlc_media_list_player_t::object_lock' o='192' t='vlc_mutex_t'/>
<mbr r='libvlc_media_list_player_t::mp_callback_lock' o='512' t='vlc_mutex_t'/>
<mbr r='libvlc_media_list_player_t::are_mp_callback_cancelled' o='832' t='_Bool'/>
<mbr r='libvlc_media_list_player_t::current_playing_item_path' o='896' t='libvlc_media_list_path_t'/>
<mbr r='libvlc_media_list_player_t::p_current_playing_item' o='960' t='libvlc_media_t *'/>
<mbr r='libvlc_media_list_player_t::p_mlist' o='1024' t='libvlc_media_list_t *'/>
<mbr r='libvlc_media_list_player_t::p_mi' o='1088' t='libvlc_media_player_t *'/>
<mbr r='libvlc_media_list_player_t::e_playback_mode' o='1152' t='libvlc_playback_mode_t'/>
