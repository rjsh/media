<dec f='ffmpeg/libavutil/mem.h' l='372' type='void * av_fast_realloc(void * ptr, unsigned int * size, size_t min_size)'/>
<doc f='ffmpeg/libavutil/mem.h' l='340'>/**
 * Reallocate the given buffer if it is not large enough, otherwise do nothing.
 *
 * If the given buffer is `NULL`, then a new uninitialized buffer is allocated.
 *
 * If the given buffer is not large enough, and reallocation fails, `NULL` is
 * returned and `*size` is set to 0, but the original buffer is not changed or
 * freed.
 *
 * A typical use pattern follows:
 *
 * @code{.c}
 * uint8_t *buf = ...;
 * uint8_t *new_buf = av_fast_realloc(buf, &amp;current_size, size_needed);
 * if (!new_buf) {
 *     // Allocation failed; clean up original buffer
 *     av_freep(&amp;buf);
 *     return AVERROR(ENOMEM);
 * }
 * @endcode
 *
 * @param[in,out] ptr      Already allocated buffer, or `NULL`
 * @param[in,out] size     Pointer to current size of buffer `ptr`. `*size` is
 *                         changed to `min_size` in case of success or 0 in
 *                         case of failure
 * @param[in]     min_size New size of buffer `ptr`
 * @return `ptr` if the buffer is large enough, a pointer to newly reallocated
 *         buffer if the buffer was not large enough, or `NULL` in case of
 *         error
 * @see av_realloc()
 * @see av_fast_malloc()
 */</doc>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='108' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='109' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='110' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='111' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='166' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='171' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='176' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/f_drawgraph.c' l='181' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/f_reverse.c' l='42' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_reverse.c' l='47' u='c' c='init'/>
<use f='ffmpeg/libavfilter/f_reverse.c' l='72' u='c' c='filter_frame'/>
<use f='ffmpeg/libavfilter/f_reverse.c' l='79' u='c' c='filter_frame'/>
<use f='ffmpeg/libavcodec/4xm.c' l='889' u='c' c='decode_frame'/>
<use f='ffmpeg/libavcodec/audio_frame_queue.c' l='46' u='c' c='ff_af_queue_add'/>
<use f='ffmpeg/libavcodec/dirac_parser.c' l='159' u='c' c='dirac_combine_frame'/>
<use f='ffmpeg/libavcodec/dirac_parser.c' l='171' u='c' c='dirac_combine_frame'/>
<use f='ffmpeg/libavcodec/flac_parser.c' l='127' u='c' c='flac_fifo_read_wrap'/>
<use f='ffmpeg/libavcodec/libtheoraenc.c' l='102' u='c' c='get_stats'/>
<use f='ffmpeg/libavcodec/parser.c' l='272' u='c' c='ff_combine_frame'/>
<use f='ffmpeg/libavcodec/parser.c' l='292' u='c' c='ff_combine_frame'/>
<use f='ffmpeg/libavcodec/pthread_frame.c' l='877' u='c' c='ff_thread_release_buffer'/>
<use f='ffmpeg/libavcodec/shorten.c' l='512' u='c' c='shorten_decode_frame'/>
<use f='ffmpeg/libavcodec/shorten.c' l='562' u='c' c='shorten_decode_frame'/>
<use f='ffmpeg/libavcodec/vaapi.c' l='120' u='c' c='ff_vaapi_commit_slices'/>
<use f='ffmpeg/libavcodec/vaapi.c' l='192' u='c' c='ff_vaapi_alloc_slice'/>
<use f='ffmpeg/libavcodec/vdpau.c' l='351' u='c' c='ff_vdpau_add_buffer'/>
<use f='ffmpeg/libavcodec/vdpau.c' l='373' u='c' c='ff_vdpau_add_data_chunk'/>
<use f='ffmpeg/libavcodec/vp9.c' l='784' u='c' c='decode_frame_header'/>
<use f='ffmpeg/libavformat/bethsoftvid.c' l='149' u='c' c='read_frame'/>
<use f='ffmpeg/libavformat/cafenc.c' l='214' u='c' c='caf_write_packet'/>
<use f='ffmpeg/libavformat/hls.c' l='1033' u='c' c='intercept_id3'/>
<use f='ffmpeg/libavformat/mms.c' l='104' u='c' c='ff_mms_asf_header_parser'/>
<use f='ffmpeg/libavformat/mov.c' l='2861' u='c' c='add_index_entry'/>
<use f='ffmpeg/libavformat/mov.c' l='2912' u='c' c='add_ctts_entry'/>
<use f='ffmpeg/libavformat/mxg.c' l='112' u='c' c='mxg_update_cache'/>
<use f='ffmpeg/libavformat/spdifenc.c' l='124' u='c' c='spdif_header_eac3'/>
<use f='ffmpeg/libavformat/subtitles.c' l='130' u='c' c='ff_subtitles_queue_insert'/>
<use f='ffmpeg/libavformat/utils.c' l='1907' u='c' c='ff_add_index_entry'/>
<def f='ffmpeg/libavutil/mem.c' l='480' type='void * av_fast_realloc(void * ptr, unsigned int * size, size_t min_size)'/>
<dec f='include/libavcodec/avcodec.h' l='4517' type='void * av_fast_realloc(void * ptr, unsigned int * size, size_t min_size)'/>
<doc f='include/libavcodec/avcodec.h' l='4512'>/**
 * Reallocate the given block if it is not large enough, otherwise do nothing.
 *
 * @see av_realloc
 */</doc>
